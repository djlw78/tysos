/* Produced by make_x86_opcodes based upon the x86reference.xml file
 *  provided by Karel Lejska (http://ref.x86asm.net) - see the Licence
 *  there */

using System.Collections.Generic;

namespace libtysila
{
	partial class x86_64_Assembler
	{
		partial class x86_64_TybelNode
		{
			static void InitX86Opcodes()
			{
				instrs["add_r8_rm8"] = new inst_def { name = "add", opcodes = new byte[] { 0x00 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["add_r163264_rm163264"] = new inst_def { name = "add", opcodes = new byte[] { 0x01 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["add_rm8_r8"] = new inst_def { name = "add", opcodes = new byte[] { 0x02 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["add_rm163264_r163264"] = new inst_def { name = "add", opcodes = new byte[] { 0x03 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["add_imm8_al"] = new inst_def { name = "add", opcodes = new byte[] { 0x04 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["add_imm1632_rax"] = new inst_def { name = "add", opcodes = new byte[] { 0x05 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["push_es"] = new inst_def { name = "push", opcodes = new byte[] { 0x06 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pop_es"] = new inst_def { name = "pop", opcodes = new byte[] { 0x07 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["or_r8_rm8"] = new inst_def { name = "or", opcodes = new byte[] { 0x08 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["or_r163264_rm163264"] = new inst_def { name = "or", opcodes = new byte[] { 0x09 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["or_rm8_r8"] = new inst_def { name = "or", opcodes = new byte[] { 0x0A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["or_rm163264_r163264"] = new inst_def { name = "or", opcodes = new byte[] { 0x0B }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["or_imm8_al"] = new inst_def { name = "or", opcodes = new byte[] { 0x0C }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["or_imm1632_rax"] = new inst_def { name = "or", opcodes = new byte[] { 0x0D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["push_cs"] = new inst_def { name = "push", opcodes = new byte[] { 0x0E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pop_cs"] = new inst_def { name = "pop", opcodes = new byte[] { 0x0F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["adc_r8_rm8"] = new inst_def { name = "adc", opcodes = new byte[] { 0x10 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["adc_r163264_rm163264"] = new inst_def { name = "adc", opcodes = new byte[] { 0x11 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["adc_rm8_r8"] = new inst_def { name = "adc", opcodes = new byte[] { 0x12 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["adc_rm163264_r163264"] = new inst_def { name = "adc", opcodes = new byte[] { 0x13 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["adc_imm8_al"] = new inst_def { name = "adc", opcodes = new byte[] { 0x14 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["adc_imm1632_rax"] = new inst_def { name = "adc", opcodes = new byte[] { 0x15 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["push_ss"] = new inst_def { name = "push", opcodes = new byte[] { 0x16 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pop_ss"] = new inst_def { name = "pop", opcodes = new byte[] { 0x17 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["sbb_r8_rm8"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x18 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["sbb_r163264_rm163264"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x19 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["sbb_rm8_r8"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x1A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["sbb_rm163264_r163264"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x1B }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["sbb_imm8_al"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x1C }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["sbb_imm1632_rax"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x1D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["push_ds"] = new inst_def { name = "push", opcodes = new byte[] { 0x1E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pop_ds"] = new inst_def { name = "pop", opcodes = new byte[] { 0x1F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["and_r8_rm8"] = new inst_def { name = "and", opcodes = new byte[] { 0x20 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["and_r163264_rm163264"] = new inst_def { name = "and", opcodes = new byte[] { 0x21 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["and_rm8_r8"] = new inst_def { name = "and", opcodes = new byte[] { 0x22 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["and_rm163264_r163264"] = new inst_def { name = "and", opcodes = new byte[] { 0x23 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["and_imm8_al"] = new inst_def { name = "and", opcodes = new byte[] { 0x24 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["and_imm1632_rax"] = new inst_def { name = "and", opcodes = new byte[] { 0x25 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["es"] = new inst_def { name = "es", opcodes = new byte[] { 0x26 }, ops = new inst_def.optype[] {  } };
				instrs["daa"] = new inst_def { name = "daa", opcodes = new byte[] { 0x27 }, ops = new inst_def.optype[] {  } };
				instrs["sub_r8_rm8"] = new inst_def { name = "sub", opcodes = new byte[] { 0x28 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["sub_r163264_rm163264"] = new inst_def { name = "sub", opcodes = new byte[] { 0x29 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["sub_rm8_r8"] = new inst_def { name = "sub", opcodes = new byte[] { 0x2A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["sub_rm163264_r163264"] = new inst_def { name = "sub", opcodes = new byte[] { 0x2B }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["sub_imm8_al"] = new inst_def { name = "sub", opcodes = new byte[] { 0x2C }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["sub_imm1632_rax"] = new inst_def { name = "sub", opcodes = new byte[] { 0x2D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["cs"] = new inst_def { name = "cs", opcodes = new byte[] { 0x2E }, ops = new inst_def.optype[] {  } };
				instrs["ntaken"] = new inst_def { name = "ntaken", opcodes = new byte[] { 0x2E }, ops = new inst_def.optype[] {  } };
				instrs["das"] = new inst_def { name = "das", opcodes = new byte[] { 0x2F }, ops = new inst_def.optype[] {  } };
				instrs["xor_r8_rm8"] = new inst_def { name = "xor", opcodes = new byte[] { 0x30 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["xor_r163264_rm163264"] = new inst_def { name = "xor", opcodes = new byte[] { 0x31 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["xor_rm8_r8"] = new inst_def { name = "xor", opcodes = new byte[] { 0x32 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["xor_rm163264_r163264"] = new inst_def { name = "xor", opcodes = new byte[] { 0x33 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["xor_imm8_al"] = new inst_def { name = "xor", opcodes = new byte[] { 0x34 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["xor_imm1632_rax"] = new inst_def { name = "xor", opcodes = new byte[] { 0x35 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["ss"] = new inst_def { name = "ss", opcodes = new byte[] { 0x36 }, ops = new inst_def.optype[] {  } };
				instrs["aaa"] = new inst_def { name = "aaa", opcodes = new byte[] { 0x37 }, ops = new inst_def.optype[] {  } };
				instrs["cmp_rm8"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x38 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["cmp_rm163264"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x39 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["cmp_r8"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x3A }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["cmp_r163264"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x3B }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["cmp_al"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x3C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["cmp_rax"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x3D }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["ds"] = new inst_def { name = "ds", opcodes = new byte[] { 0x3E }, ops = new inst_def.optype[] {  } };
				instrs["taken"] = new inst_def { name = "taken", opcodes = new byte[] { 0x3E }, ops = new inst_def.optype[] {  } };
				instrs["aas"] = new inst_def { name = "aas", opcodes = new byte[] { 0x3F }, ops = new inst_def.optype[] {  } };
				instrs["inc_r1632"] = new inst_def { name = "inc", opcodes = new byte[] { 0x40 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["rex"] = new inst_def { name = "rex", opcodes = new byte[] { 0x40 }, ops = new inst_def.optype[] {  } };
				instrs["rex.b"] = new inst_def { name = "rex.b", opcodes = new byte[] { 0x41 }, ops = new inst_def.optype[] {  } };
				instrs["rex.x"] = new inst_def { name = "rex.x", opcodes = new byte[] { 0x42 }, ops = new inst_def.optype[] {  } };
				instrs["rex.xb"] = new inst_def { name = "rex.xb", opcodes = new byte[] { 0x43 }, ops = new inst_def.optype[] {  } };
				instrs["rex.r"] = new inst_def { name = "rex.r", opcodes = new byte[] { 0x44 }, ops = new inst_def.optype[] {  } };
				instrs["rex.rb"] = new inst_def { name = "rex.rb", opcodes = new byte[] { 0x45 }, ops = new inst_def.optype[] {  } };
				instrs["rex.rx"] = new inst_def { name = "rex.rx", opcodes = new byte[] { 0x46 }, ops = new inst_def.optype[] {  } };
				instrs["rex.rxb"] = new inst_def { name = "rex.rxb", opcodes = new byte[] { 0x47 }, ops = new inst_def.optype[] {  } };
				instrs["dec_r1632"] = new inst_def { name = "dec", opcodes = new byte[] { 0x48 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["rex.w"] = new inst_def { name = "rex.w", opcodes = new byte[] { 0x48 }, ops = new inst_def.optype[] {  } };
				instrs["rex.wb"] = new inst_def { name = "rex.wb", opcodes = new byte[] { 0x49 }, ops = new inst_def.optype[] {  } };
				instrs["rex.wx"] = new inst_def { name = "rex.wx", opcodes = new byte[] { 0x4A }, ops = new inst_def.optype[] {  } };
				instrs["rex.wxb"] = new inst_def { name = "rex.wxb", opcodes = new byte[] { 0x4B }, ops = new inst_def.optype[] {  } };
				instrs["rex.wr"] = new inst_def { name = "rex.wr", opcodes = new byte[] { 0x4C }, ops = new inst_def.optype[] {  } };
				instrs["rex.wrb"] = new inst_def { name = "rex.wrb", opcodes = new byte[] { 0x4D }, ops = new inst_def.optype[] {  } };
				instrs["rex.wrx"] = new inst_def { name = "rex.wrx", opcodes = new byte[] { 0x4E }, ops = new inst_def.optype[] {  } };
				instrs["rex.wrxb"] = new inst_def { name = "rex.wrxb", opcodes = new byte[] { 0x4F }, ops = new inst_def.optype[] {  } };
				instrs["push_r1632"] = new inst_def { name = "push", opcodes = new byte[] { 0x50 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["push_r6416"] = new inst_def { name = "push", opcodes = new byte[] { 0x50 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["pop_r1632"] = new inst_def { name = "pop", opcodes = new byte[] { 0x58 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["pop_r6416"] = new inst_def { name = "pop", opcodes = new byte[] { 0x58 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["pusha"] = new inst_def { name = "pusha", opcodes = new byte[] { 0x60 }, ops = new inst_def.optype[] {  } };
				instrs["pushad"] = new inst_def { name = "pushad", opcodes = new byte[] { 0x60 }, ops = new inst_def.optype[] {  } };
				instrs["popa"] = new inst_def { name = "popa", opcodes = new byte[] { 0x61 }, ops = new inst_def.optype[] {  } };
				instrs["popad"] = new inst_def { name = "popad", opcodes = new byte[] { 0x61 }, ops = new inst_def.optype[] {  } };
				instrs["bound_r1632"] = new inst_def { name = "bound", opcodes = new byte[] { 0x62 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["arpl_rm16"] = new inst_def { name = "arpl", opcodes = new byte[] { 0x63 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["movsxd_rm32_r3264"] = new inst_def { name = "movsxd", opcodes = new byte[] { 0x63 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["fs"] = new inst_def { name = "fs", opcodes = new byte[] { 0x64 }, ops = new inst_def.optype[] {  } };
				instrs["alter"] = new inst_def { name = "alter", opcodes = new byte[] { 0x64 }, ops = new inst_def.optype[] {  } };
				instrs["gs"] = new inst_def { name = "gs", opcodes = new byte[] { 0x65 }, ops = new inst_def.optype[] {  } };
				instrs["push_imm1632"] = new inst_def { name = "push", opcodes = new byte[] { 0x68 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["imul_rm163264_r163264"] = new inst_def { name = "imul", opcodes = new byte[] { 0x69 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["push_imm8"] = new inst_def { name = "push", opcodes = new byte[] { 0x6A }, ops = new inst_def.optype[] { inst_def.optype.Imm8 } };
				instrs["imul_rm163264_r163264"] = new inst_def { name = "imul", opcodes = new byte[] { 0x6B }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["ins_dx_esrdi"] = new inst_def { name = "ins", opcodes = new byte[] { 0x6C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["ins_dx_esdi"] = new inst_def { name = "ins", opcodes = new byte[] { 0x6D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["ins_dx_esrdi"] = new inst_def { name = "ins", opcodes = new byte[] { 0x6D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["outs_dsrsi_dx"] = new inst_def { name = "outs", opcodes = new byte[] { 0x6E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["outs_dssi_dx"] = new inst_def { name = "outs", opcodes = new byte[] { 0x6F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["outs_dsrsi_dx"] = new inst_def { name = "outs", opcodes = new byte[] { 0x6F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["jo_rel8"] = new inst_def { name = "jo", opcodes = new byte[] { 0x70 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jno_rel8"] = new inst_def { name = "jno", opcodes = new byte[] { 0x71 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jb_rel8"] = new inst_def { name = "jb", opcodes = new byte[] { 0x72 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnb_rel8"] = new inst_def { name = "jnb", opcodes = new byte[] { 0x73 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jz_rel8"] = new inst_def { name = "jz", opcodes = new byte[] { 0x74 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnz_rel8"] = new inst_def { name = "jnz", opcodes = new byte[] { 0x75 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jbe_rel8"] = new inst_def { name = "jbe", opcodes = new byte[] { 0x76 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnbe_rel8"] = new inst_def { name = "jnbe", opcodes = new byte[] { 0x77 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["js_rel8"] = new inst_def { name = "js", opcodes = new byte[] { 0x78 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jns_rel8"] = new inst_def { name = "jns", opcodes = new byte[] { 0x79 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jp_rel8"] = new inst_def { name = "jp", opcodes = new byte[] { 0x7A }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnp_rel8"] = new inst_def { name = "jnp", opcodes = new byte[] { 0x7B }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jl_rel8"] = new inst_def { name = "jl", opcodes = new byte[] { 0x7C }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnl_rel8"] = new inst_def { name = "jnl", opcodes = new byte[] { 0x7D }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jle_rel8"] = new inst_def { name = "jle", opcodes = new byte[] { 0x7E }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnle_rel8"] = new inst_def { name = "jnle", opcodes = new byte[] { 0x7F }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["add_imm8_rm8"] = new inst_def { name = "add", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 0 };
				instrs["or_imm8_rm8"] = new inst_def { name = "or", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 1 };
				instrs["adc_imm8_rm8"] = new inst_def { name = "adc", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 2 };
				instrs["sbb_imm8_rm8"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 3 };
				instrs["and_imm8_rm8"] = new inst_def { name = "and", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 4 };
				instrs["sub_imm8_rm8"] = new inst_def { name = "sub", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 5 };
				instrs["xor_imm8_rm8"] = new inst_def { name = "xor", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 6 };
				instrs["cmp_rm8"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x80 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["add_imm1632_rm163264"] = new inst_def { name = "add", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 0 };
				instrs["or_imm1632_rm163264"] = new inst_def { name = "or", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 1 };
				instrs["adc_imm1632_rm163264"] = new inst_def { name = "adc", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 2 };
				instrs["sbb_imm1632_rm163264"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 3 };
				instrs["and_imm1632_rm163264"] = new inst_def { name = "and", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 4 };
				instrs["sub_imm1632_rm163264"] = new inst_def { name = "sub", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 5 };
				instrs["xor_imm1632_rm163264"] = new inst_def { name = "xor", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 6 };
				instrs["cmp_rm163264"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x81 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["add_imm8_rm8"] = new inst_def { name = "add", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 0 };
				instrs["or_imm8_rm8"] = new inst_def { name = "or", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 1 };
				instrs["adc_imm8_rm8"] = new inst_def { name = "adc", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 2 };
				instrs["sbb_imm8_rm8"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 3 };
				instrs["and_imm8_rm8"] = new inst_def { name = "and", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 4 };
				instrs["sub_imm8_rm8"] = new inst_def { name = "sub", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 5 };
				instrs["xor_imm8_rm8"] = new inst_def { name = "xor", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 6 };
				instrs["cmp_rm8"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x82 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["add_imm8_rm163264"] = new inst_def { name = "add", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 0 };
				instrs["or_imm8_rm163264"] = new inst_def { name = "or", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 1 };
				instrs["adc_imm8_rm163264"] = new inst_def { name = "adc", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 2 };
				instrs["sbb_imm8_rm163264"] = new inst_def { name = "sbb", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 3 };
				instrs["and_imm8_rm163264"] = new inst_def { name = "and", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 4 };
				instrs["sub_imm8_rm163264"] = new inst_def { name = "sub", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 5 };
				instrs["xor_imm8_rm163264"] = new inst_def { name = "xor", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 6 };
				instrs["cmp_rm163264"] = new inst_def { name = "cmp", opcodes = new byte[] { 0x83 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["test_rm8"] = new inst_def { name = "test", opcodes = new byte[] { 0x84 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["test_rm163264"] = new inst_def { name = "test", opcodes = new byte[] { 0x85 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["xchg_r8"] = new inst_def { name = "xchg", opcodes = new byte[] { 0x86 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["xchg_r163264"] = new inst_def { name = "xchg", opcodes = new byte[] { 0x87 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["mov_r8_rm8"] = new inst_def { name = "mov", opcodes = new byte[] { 0x88 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["mov_r163264_rm163264"] = new inst_def { name = "mov", opcodes = new byte[] { 0x89 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["mov_rm8_r8"] = new inst_def { name = "mov", opcodes = new byte[] { 0x8A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["mov_rm163264_r163264"] = new inst_def { name = "mov", opcodes = new byte[] { 0x8B }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["mov_Sreg16_m16"] = new inst_def { name = "mov", opcodes = new byte[] { 0x8C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["lea_m_r163264"] = new inst_def { name = "lea", opcodes = new byte[] { 0x8D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_rm16_Sreg16"] = new inst_def { name = "mov", opcodes = new byte[] { 0x8E }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["pop_rm1632"] = new inst_def { name = "pop", opcodes = new byte[] { 0x8F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["pop_rm6416"] = new inst_def { name = "pop", opcodes = new byte[] { 0x8F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["xchg_r163264"] = new inst_def { name = "xchg", opcodes = new byte[] { 0x90 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["nop"] = new inst_def { name = "nop", opcodes = new byte[] { 0x90 }, ops = new inst_def.optype[] {  } };
				instrs["nop"] = new inst_def { name = "nop", opcodes = new byte[] { 0xF3, 0x90 }, ops = new inst_def.optype[] {  } };
				instrs["pause"] = new inst_def { name = "pause", opcodes = new byte[] { 0xF3, 0x90 }, ops = new inst_def.optype[] {  } };
				instrs["cbw"] = new inst_def { name = "cbw", opcodes = new byte[] { 0x98 }, ops = new inst_def.optype[] {  } };
				instrs["cwde"] = new inst_def { name = "cwde", opcodes = new byte[] { 0x98 }, ops = new inst_def.optype[] {  } };
				instrs["cbw"] = new inst_def { name = "cbw", opcodes = new byte[] { 0x98 }, ops = new inst_def.optype[] {  } };
				instrs["cwd"] = new inst_def { name = "cwd", opcodes = new byte[] { 0x99 }, ops = new inst_def.optype[] {  } };
				instrs["cdq"] = new inst_def { name = "cdq", opcodes = new byte[] { 0x99 }, ops = new inst_def.optype[] {  } };
				instrs["cwd"] = new inst_def { name = "cwd", opcodes = new byte[] { 0x99 }, ops = new inst_def.optype[] {  } };
				instrs["callf_ptr161632"] = new inst_def { name = "callf", opcodes = new byte[] { 0x9A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["fwait"] = new inst_def { name = "fwait", opcodes = new byte[] { 0x9B }, ops = new inst_def.optype[] {  } };
				instrs["pushf"] = new inst_def { name = "pushf", opcodes = new byte[] { 0x9C }, ops = new inst_def.optype[] {  } };
				instrs["pushfd"] = new inst_def { name = "pushfd", opcodes = new byte[] { 0x9C }, ops = new inst_def.optype[] {  } };
				instrs["pushf"] = new inst_def { name = "pushf", opcodes = new byte[] { 0x9C }, ops = new inst_def.optype[] {  } };
				instrs["popf"] = new inst_def { name = "popf", opcodes = new byte[] { 0x9D }, ops = new inst_def.optype[] {  } };
				instrs["popfd"] = new inst_def { name = "popfd", opcodes = new byte[] { 0x9D }, ops = new inst_def.optype[] {  } };
				instrs["popf"] = new inst_def { name = "popf", opcodes = new byte[] { 0x9D }, ops = new inst_def.optype[] {  } };
				instrs["sahf"] = new inst_def { name = "sahf", opcodes = new byte[] { 0x9E }, ops = new inst_def.optype[] {  } };
				instrs["lahf"] = new inst_def { name = "lahf", opcodes = new byte[] { 0x9F }, ops = new inst_def.optype[] {  } };
				instrs["mov_moffs8_al"] = new inst_def { name = "mov", opcodes = new byte[] { 0xA0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mov_moffs163264_rax"] = new inst_def { name = "mov", opcodes = new byte[] { 0xA1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_al_moffs8"] = new inst_def { name = "mov", opcodes = new byte[] { 0xA2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mov_rax_moffs163264"] = new inst_def { name = "mov", opcodes = new byte[] { 0xA3 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["movs_dsrsi_esrdi"] = new inst_def { name = "movs", opcodes = new byte[] { 0xA4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movs_dssi_esdi"] = new inst_def { name = "movs", opcodes = new byte[] { 0xA5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movs_dsrsi_esrdi"] = new inst_def { name = "movs", opcodes = new byte[] { 0xA5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movs_rsi_rdi"] = new inst_def { name = "movs", opcodes = new byte[] { 0xA5 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.R } };
				instrs["cmps_esrdi"] = new inst_def { name = "cmps", opcodes = new byte[] { 0xA6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["cmps_esdi"] = new inst_def { name = "cmps", opcodes = new byte[] { 0xA7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["cmps_esrdi"] = new inst_def { name = "cmps", opcodes = new byte[] { 0xA7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["cmps_rdi"] = new inst_def { name = "cmps", opcodes = new byte[] { 0xA7 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["test_al"] = new inst_def { name = "test", opcodes = new byte[] { 0xA8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["test_rax"] = new inst_def { name = "test", opcodes = new byte[] { 0xA9 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["stos_esrdi"] = new inst_def { name = "stos", opcodes = new byte[] { 0xAA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["stos_esdi"] = new inst_def { name = "stos", opcodes = new byte[] { 0xAB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["stos_esrdi"] = new inst_def { name = "stos", opcodes = new byte[] { 0xAB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["stos_rdi"] = new inst_def { name = "stos", opcodes = new byte[] { 0xAB }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["lods_dsrsi"] = new inst_def { name = "lods", opcodes = new byte[] { 0xAC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["lods_dssi"] = new inst_def { name = "lods", opcodes = new byte[] { 0xAD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["lods_dsrsi"] = new inst_def { name = "lods", opcodes = new byte[] { 0xAD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["lods_rsi"] = new inst_def { name = "lods", opcodes = new byte[] { 0xAD }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["scas_esrdi"] = new inst_def { name = "scas", opcodes = new byte[] { 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["scas_esdi"] = new inst_def { name = "scas", opcodes = new byte[] { 0xAF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["scas_esrdi"] = new inst_def { name = "scas", opcodes = new byte[] { 0xAF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["scas_rdi"] = new inst_def { name = "scas", opcodes = new byte[] { 0xAF }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["mov_imm8_r8"] = new inst_def { name = "mov", opcodes = new byte[] { 0xB0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.R } };
				instrs["mov_imm163264_r163264"] = new inst_def { name = "mov", opcodes = new byte[] { 0xB8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["rol_imm8_rm8"] = new inst_def { name = "rol", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 0 };
				instrs["ror_imm8_rm8"] = new inst_def { name = "ror", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 1 };
				instrs["rcl_imm8_rm8"] = new inst_def { name = "rcl", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 2 };
				instrs["rcr_imm8_rm8"] = new inst_def { name = "rcr", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 3 };
				instrs["shl_imm8_rm8"] = new inst_def { name = "shl", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 4 };
				instrs["shr_imm8_rm8"] = new inst_def { name = "shr", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 5 };
				instrs["sal_imm8_rm8"] = new inst_def { name = "sal", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 6 };
				instrs["sar_imm8_rm8"] = new inst_def { name = "sar", opcodes = new byte[] { 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 7 };
				instrs["rol_imm8_rm163264"] = new inst_def { name = "rol", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 0 };
				instrs["ror_imm8_rm163264"] = new inst_def { name = "ror", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 1 };
				instrs["rcl_imm8_rm163264"] = new inst_def { name = "rcl", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 2 };
				instrs["rcr_imm8_rm163264"] = new inst_def { name = "rcr", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 3 };
				instrs["shl_imm8_rm163264"] = new inst_def { name = "shl", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 4 };
				instrs["shr_imm8_rm163264"] = new inst_def { name = "shr", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 5 };
				instrs["sal_imm8_rm163264"] = new inst_def { name = "sal", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 6 };
				instrs["sar_imm8_rm163264"] = new inst_def { name = "sar", opcodes = new byte[] { 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 7 };
				instrs["retn"] = new inst_def { name = "retn", opcodes = new byte[] { 0xC2 }, ops = new inst_def.optype[] {  } };
				instrs["retn"] = new inst_def { name = "retn", opcodes = new byte[] { 0xC3 }, ops = new inst_def.optype[] {  } };
				instrs["les_m161632"] = new inst_def { name = "les", opcodes = new byte[] { 0xC4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["lds_m161632"] = new inst_def { name = "lds", opcodes = new byte[] { 0xC5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["mov_imm8_rm8"] = new inst_def { name = "mov", opcodes = new byte[] { 0xC6 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 0 };
				instrs["mov_imm1632_rm163264"] = new inst_def { name = "mov", opcodes = new byte[] { 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 0 };
				instrs["enter_imm16"] = new inst_def { name = "enter", opcodes = new byte[] { 0xC8 }, ops = new inst_def.optype[] { inst_def.optype.Imm16 } };
				instrs["enter_imm16"] = new inst_def { name = "enter", opcodes = new byte[] { 0xC8 }, ops = new inst_def.optype[] { inst_def.optype.Imm16 } };
				instrs["leave"] = new inst_def { name = "leave", opcodes = new byte[] { 0xC9 }, ops = new inst_def.optype[] {  } };
				instrs["leave"] = new inst_def { name = "leave", opcodes = new byte[] { 0xC9 }, ops = new inst_def.optype[] {  } };
				instrs["retf_imm16"] = new inst_def { name = "retf", opcodes = new byte[] { 0xCA }, ops = new inst_def.optype[] { inst_def.optype.Imm16 } };
				instrs["retf"] = new inst_def { name = "retf", opcodes = new byte[] { 0xCB }, ops = new inst_def.optype[] {  } };
				instrs["int_3"] = new inst_def { name = "int", opcodes = new byte[] { 0xCC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["int_imm8"] = new inst_def { name = "int", opcodes = new byte[] { 0xCD }, ops = new inst_def.optype[] { inst_def.optype.Imm8 } };
				instrs["into"] = new inst_def { name = "into", opcodes = new byte[] { 0xCE }, ops = new inst_def.optype[] {  } };
				instrs["iret"] = new inst_def { name = "iret", opcodes = new byte[] { 0xCF }, ops = new inst_def.optype[] {  } };
				instrs["iretd"] = new inst_def { name = "iretd", opcodes = new byte[] { 0xCF }, ops = new inst_def.optype[] {  } };
				instrs["iret"] = new inst_def { name = "iret", opcodes = new byte[] { 0xCF }, ops = new inst_def.optype[] {  } };
				instrs["rol_1_rm8"] = new inst_def { name = "rol", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 0 };
				instrs["ror_1_rm8"] = new inst_def { name = "ror", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 1 };
				instrs["rcl_1_rm8"] = new inst_def { name = "rcl", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 2 };
				instrs["rcr_1_rm8"] = new inst_def { name = "rcr", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 3 };
				instrs["shl_1_rm8"] = new inst_def { name = "shl", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 4 };
				instrs["shr_1_rm8"] = new inst_def { name = "shr", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 5 };
				instrs["sal_1_rm8"] = new inst_def { name = "sal", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 6 };
				instrs["sar_1_rm8"] = new inst_def { name = "sar", opcodes = new byte[] { 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 7 };
				instrs["rol_1_rm163264"] = new inst_def { name = "rol", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 0 };
				instrs["ror_1_rm163264"] = new inst_def { name = "ror", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 1 };
				instrs["rcl_1_rm163264"] = new inst_def { name = "rcl", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 2 };
				instrs["rcr_1_rm163264"] = new inst_def { name = "rcr", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 3 };
				instrs["shl_1_rm163264"] = new inst_def { name = "shl", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 4 };
				instrs["shr_1_rm163264"] = new inst_def { name = "shr", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 5 };
				instrs["sal_1_rm163264"] = new inst_def { name = "sal", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 6 };
				instrs["sar_1_rm163264"] = new inst_def { name = "sar", opcodes = new byte[] { 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 7 };
				instrs["rol_cl_rm8"] = new inst_def { name = "rol", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 0 };
				instrs["ror_cl_rm8"] = new inst_def { name = "ror", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 1 };
				instrs["rcl_cl_rm8"] = new inst_def { name = "rcl", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 2 };
				instrs["rcr_cl_rm8"] = new inst_def { name = "rcr", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 3 };
				instrs["shl_cl_rm8"] = new inst_def { name = "shl", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 4 };
				instrs["shr_cl_rm8"] = new inst_def { name = "shr", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 5 };
				instrs["sal_cl_rm8"] = new inst_def { name = "sal", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 6 };
				instrs["sar_cl_rm8"] = new inst_def { name = "sar", opcodes = new byte[] { 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 7 };
				instrs["rol_cl_rm163264"] = new inst_def { name = "rol", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 0 };
				instrs["ror_cl_rm163264"] = new inst_def { name = "ror", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 1 };
				instrs["rcl_cl_rm163264"] = new inst_def { name = "rcl", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 2 };
				instrs["rcr_cl_rm163264"] = new inst_def { name = "rcr", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 3 };
				instrs["shl_cl_rm163264"] = new inst_def { name = "shl", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 4 };
				instrs["shr_cl_rm163264"] = new inst_def { name = "shr", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 5 };
				instrs["sal_cl_rm163264"] = new inst_def { name = "sal", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 6 };
				instrs["sar_cl_rm163264"] = new inst_def { name = "sar", opcodes = new byte[] { 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM }, fixed_r = 7 };
				instrs["aam"] = new inst_def { name = "aam", opcodes = new byte[] { 0xD4, 0x0A }, ops = new inst_def.optype[] {  } };
				instrs["amx_imm8"] = new inst_def { name = "amx", opcodes = new byte[] { 0xD4 }, ops = new inst_def.optype[] { inst_def.optype.Imm8 } };
				instrs["aad"] = new inst_def { name = "aad", opcodes = new byte[] { 0xD5, 0x0A }, ops = new inst_def.optype[] {  } };
				instrs["adx_imm8"] = new inst_def { name = "adx", opcodes = new byte[] { 0xD5 }, ops = new inst_def.optype[] { inst_def.optype.Imm8 } };
				instrs["salc"] = new inst_def { name = "salc", opcodes = new byte[] { 0xD6 }, ops = new inst_def.optype[] {  } };
				instrs["xlat_dsrbx+al"] = new inst_def { name = "xlat", opcodes = new byte[] { 0xD7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["fadd_m32real"] = new inst_def { name = "fadd", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fmul_m32real"] = new inst_def { name = "fmul", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fcom"] = new inst_def { name = "fcom", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcom"] = new inst_def { name = "fcom", opcodes = new byte[] { 0xD8, 0xD1 }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcomp"] = new inst_def { name = "fcomp", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fcomp"] = new inst_def { name = "fcomp", opcodes = new byte[] { 0xD8, 0xD9 }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fsub_m32real"] = new inst_def { name = "fsub", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fsubr_m32real"] = new inst_def { name = "fsubr", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fdiv_m32real"] = new inst_def { name = "fdiv", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fdivr_m32real"] = new inst_def { name = "fdivr", opcodes = new byte[] { 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fld_STim32real"] = new inst_def { name = "fld", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fxch"] = new inst_def { name = "fxch", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["fxch"] = new inst_def { name = "fxch", opcodes = new byte[] { 0xD9, 0xC9 }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["fst_m32real"] = new inst_def { name = "fst", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fnop"] = new inst_def { name = "fnop", opcodes = new byte[] { 0xD9, 0xD0 }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fstp_m32real"] = new inst_def { name = "fstp", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fstp1_est"] = new inst_def { name = "fstp1", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fstp1_est"] = new inst_def { name = "fstp1", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fldenv_m1428"] = new inst_def { name = "fldenv", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fchs"] = new inst_def { name = "fchs", opcodes = new byte[] { 0xD9, 0xE0 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fabs"] = new inst_def { name = "fabs", opcodes = new byte[] { 0xD9, 0xE1 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["ftst"] = new inst_def { name = "ftst", opcodes = new byte[] { 0xD9, 0xE4 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fxam"] = new inst_def { name = "fxam", opcodes = new byte[] { 0xD9, 0xE5 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fldcw_m16"] = new inst_def { name = "fldcw", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fld1"] = new inst_def { name = "fld1", opcodes = new byte[] { 0xD9, 0xE8 }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fldl2t"] = new inst_def { name = "fldl2t", opcodes = new byte[] { 0xD9, 0xE9 }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fldl2e"] = new inst_def { name = "fldl2e", opcodes = new byte[] { 0xD9, 0xEA }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fldpi"] = new inst_def { name = "fldpi", opcodes = new byte[] { 0xD9, 0xEB }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fldlg2"] = new inst_def { name = "fldlg2", opcodes = new byte[] { 0xD9, 0xEC }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fldln2"] = new inst_def { name = "fldln2", opcodes = new byte[] { 0xD9, 0xED }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fldz"] = new inst_def { name = "fldz", opcodes = new byte[] { 0xD9, 0xEE }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fnstenv_m1428"] = new inst_def { name = "fnstenv", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fstenv_m1428"] = new inst_def { name = "fstenv", opcodes = new byte[] { 0x9B, 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["f2xm1"] = new inst_def { name = "f2xm1", opcodes = new byte[] { 0xD9, 0xF0 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fyl2x"] = new inst_def { name = "fyl2x", opcodes = new byte[] { 0xD9, 0xF1 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fptan"] = new inst_def { name = "fptan", opcodes = new byte[] { 0xD9, 0xF2 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fpatan"] = new inst_def { name = "fpatan", opcodes = new byte[] { 0xD9, 0xF3 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fxtract"] = new inst_def { name = "fxtract", opcodes = new byte[] { 0xD9, 0xF4 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fprem1"] = new inst_def { name = "fprem1", opcodes = new byte[] { 0xD9, 0xF5 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fdecstp"] = new inst_def { name = "fdecstp", opcodes = new byte[] { 0xD9, 0xF6 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fincstp"] = new inst_def { name = "fincstp", opcodes = new byte[] { 0xD9, 0xF7 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fnstcw_m16"] = new inst_def { name = "fnstcw", opcodes = new byte[] { 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fstcw_m16"] = new inst_def { name = "fstcw", opcodes = new byte[] { 0x9B, 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fprem"] = new inst_def { name = "fprem", opcodes = new byte[] { 0xD9, 0xF8 }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fyl2xp1"] = new inst_def { name = "fyl2xp1", opcodes = new byte[] { 0xD9, 0xF9 }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fsqrt"] = new inst_def { name = "fsqrt", opcodes = new byte[] { 0xD9, 0xFA }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fsincos"] = new inst_def { name = "fsincos", opcodes = new byte[] { 0xD9, 0xFB }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["frndint"] = new inst_def { name = "frndint", opcodes = new byte[] { 0xD9, 0xFC }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fscale"] = new inst_def { name = "fscale", opcodes = new byte[] { 0xD9, 0xFD }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fsin"] = new inst_def { name = "fsin", opcodes = new byte[] { 0xD9, 0xFE }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fcos"] = new inst_def { name = "fcos", opcodes = new byte[] { 0xD9, 0xFF }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fiadd_m32int"] = new inst_def { name = "fiadd", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fcmovb_est_st"] = new inst_def { name = "fcmovb", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fimul_m32int"] = new inst_def { name = "fimul", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fcmove_est_st"] = new inst_def { name = "fcmove", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["ficom"] = new inst_def { name = "ficom", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcmovbe_est_st"] = new inst_def { name = "fcmovbe", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["ficomp"] = new inst_def { name = "ficomp", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fcmovu_est_st"] = new inst_def { name = "fcmovu", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fisub_m32int"] = new inst_def { name = "fisub", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fisubr_m32int"] = new inst_def { name = "fisubr", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fucompp"] = new inst_def { name = "fucompp", opcodes = new byte[] { 0xDA, 0xE9 }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fidiv_m32int"] = new inst_def { name = "fidiv", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fidivr_m32int"] = new inst_def { name = "fidivr", opcodes = new byte[] { 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fild_m32int"] = new inst_def { name = "fild", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fcmovnb_est_st"] = new inst_def { name = "fcmovnb", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fisttp_m32int"] = new inst_def { name = "fisttp", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fcmovne_est_st"] = new inst_def { name = "fcmovne", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fist_m32int"] = new inst_def { name = "fist", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fcmovnbe_est_st"] = new inst_def { name = "fcmovnbe", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fistp_m32int"] = new inst_def { name = "fistp", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fcmovnu_est_st"] = new inst_def { name = "fcmovnu", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fneni"] = new inst_def { name = "fneni", opcodes = new byte[] { 0xDB, 0xE0 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["feni"] = new inst_def { name = "feni", opcodes = new byte[] { 0x9B, 0xDB, 0xE0 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fneni"] = new inst_def { name = "fneni", opcodes = new byte[] { 0xDB, 0xE0 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fndisi"] = new inst_def { name = "fndisi", opcodes = new byte[] { 0xDB, 0xE1 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fdisi"] = new inst_def { name = "fdisi", opcodes = new byte[] { 0x9B, 0xDB, 0xE1 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fndisi"] = new inst_def { name = "fndisi", opcodes = new byte[] { 0xDB, 0xE1 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fnclex"] = new inst_def { name = "fnclex", opcodes = new byte[] { 0xDB, 0xE2 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fclex"] = new inst_def { name = "fclex", opcodes = new byte[] { 0x9B, 0xDB, 0xE2 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fninit"] = new inst_def { name = "fninit", opcodes = new byte[] { 0xDB, 0xE3 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["finit"] = new inst_def { name = "finit", opcodes = new byte[] { 0x9B, 0xDB, 0xE3 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fnsetpm"] = new inst_def { name = "fnsetpm", opcodes = new byte[] { 0xDB, 0xE4 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fsetpm"] = new inst_def { name = "fsetpm", opcodes = new byte[] { 0x9B, 0xDB, 0xE4 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fnsetpm"] = new inst_def { name = "fnsetpm", opcodes = new byte[] { 0xDB, 0xE4 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fld_m80real"] = new inst_def { name = "fld", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fucomi_st"] = new inst_def { name = "fucomi", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fcomi_st"] = new inst_def { name = "fcomi", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fstp_m80real"] = new inst_def { name = "fstp", opcodes = new byte[] { 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fadd_m64real"] = new inst_def { name = "fadd", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fadd_st_est"] = new inst_def { name = "fadd", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fmul_m64real"] = new inst_def { name = "fmul", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fmul_st_est"] = new inst_def { name = "fmul", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fcom"] = new inst_def { name = "fcom", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcom2"] = new inst_def { name = "fcom2", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcom2"] = new inst_def { name = "fcom2", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcomp"] = new inst_def { name = "fcomp", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fcomp3"] = new inst_def { name = "fcomp3", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fcomp3"] = new inst_def { name = "fcomp3", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fsub_m64real"] = new inst_def { name = "fsub", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fsubr_st_est"] = new inst_def { name = "fsubr", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fsubr_m64real"] = new inst_def { name = "fsubr", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fsub_st_est"] = new inst_def { name = "fsub", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fdiv_m64real"] = new inst_def { name = "fdiv", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fdivr_st_est"] = new inst_def { name = "fdivr", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fdivr_m64real"] = new inst_def { name = "fdivr", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fdiv_st_est"] = new inst_def { name = "fdiv", opcodes = new byte[] { 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fld_m64real"] = new inst_def { name = "fld", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["ffree_est"] = new inst_def { name = "ffree", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fisttp_m64int"] = new inst_def { name = "fisttp", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fxch4"] = new inst_def { name = "fxch4", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["fxch4"] = new inst_def { name = "fxch4", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["fst_m64real"] = new inst_def { name = "fst", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fst_est"] = new inst_def { name = "fst", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fstp_m64real"] = new inst_def { name = "fstp", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fstp_est"] = new inst_def { name = "fstp", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["frstor_m94108"] = new inst_def { name = "frstor", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fucom"] = new inst_def { name = "fucom", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fucom"] = new inst_def { name = "fucom", opcodes = new byte[] { 0xDD, 0xE1 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fucomp"] = new inst_def { name = "fucomp", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fucomp"] = new inst_def { name = "fucomp", opcodes = new byte[] { 0xDD, 0xE9 }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fnsave_m94108"] = new inst_def { name = "fnsave", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fsave_m94108"] = new inst_def { name = "fsave", opcodes = new byte[] { 0x9B, 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fnstsw_m16"] = new inst_def { name = "fnstsw", opcodes = new byte[] { 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fstsw_m16"] = new inst_def { name = "fstsw", opcodes = new byte[] { 0x9B, 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fiadd_m16int"] = new inst_def { name = "fiadd", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["faddp_st_est"] = new inst_def { name = "faddp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["faddp"] = new inst_def { name = "faddp", opcodes = new byte[] { 0xDE, 0xC1 }, ops = new inst_def.optype[] {  }, fixed_r = 0 };
				instrs["fimul_m16int"] = new inst_def { name = "fimul", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fmulp_st_est"] = new inst_def { name = "fmulp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fmulp"] = new inst_def { name = "fmulp", opcodes = new byte[] { 0xDE, 0xC9 }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["ficom"] = new inst_def { name = "ficom", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcomp5"] = new inst_def { name = "fcomp5", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["fcomp5"] = new inst_def { name = "fcomp5", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["ficomp"] = new inst_def { name = "ficomp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fcompp"] = new inst_def { name = "fcompp", opcodes = new byte[] { 0xDE, 0xD9 }, ops = new inst_def.optype[] {  }, fixed_r = 3 };
				instrs["fisub_m16int"] = new inst_def { name = "fisub", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fsubrp_st_est"] = new inst_def { name = "fsubrp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fsubrp"] = new inst_def { name = "fsubrp", opcodes = new byte[] { 0xDE, 0xE1 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["fisubr_m16int"] = new inst_def { name = "fisubr", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fsubp_st_est"] = new inst_def { name = "fsubp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fsubp"] = new inst_def { name = "fsubp", opcodes = new byte[] { 0xDE, 0xE9 }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["fidiv_m16int"] = new inst_def { name = "fidiv", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fdivrp_st_est"] = new inst_def { name = "fdivrp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fdivrp"] = new inst_def { name = "fdivrp", opcodes = new byte[] { 0xDE, 0xF1 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["fidivr_m16int"] = new inst_def { name = "fidivr", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fdivp_st_est"] = new inst_def { name = "fdivp", opcodes = new byte[] { 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["fdivp"] = new inst_def { name = "fdivp", opcodes = new byte[] { 0xDE, 0xF9 }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["fild_m16int"] = new inst_def { name = "fild", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["ffreep_est"] = new inst_def { name = "ffreep", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fisttp_m16int"] = new inst_def { name = "fisttp", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fxch7"] = new inst_def { name = "fxch7", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["fxch7"] = new inst_def { name = "fxch7", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["fist_m16int"] = new inst_def { name = "fist", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fstp8_est"] = new inst_def { name = "fstp8", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fstp8_est"] = new inst_def { name = "fstp8", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["fistp_m16int"] = new inst_def { name = "fistp", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fstp9_est"] = new inst_def { name = "fstp9", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fstp9_est"] = new inst_def { name = "fstp9", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["fbld_m80dec"] = new inst_def { name = "fbld", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fnstsw_ax"] = new inst_def { name = "fnstsw", opcodes = new byte[] { 0xDF, 0xE0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fstsw_ax"] = new inst_def { name = "fstsw", opcodes = new byte[] { 0x9B, 0xDF, 0xE0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["fild_m64int"] = new inst_def { name = "fild", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fucomip_st"] = new inst_def { name = "fucomip", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["fbstp_m80dec"] = new inst_def { name = "fbstp", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fcomip_st"] = new inst_def { name = "fcomip", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["fistp_m64int"] = new inst_def { name = "fistp", opcodes = new byte[] { 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["loopnz_rel8"] = new inst_def { name = "loopnz", opcodes = new byte[] { 0xE0 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["loopnz_rel8"] = new inst_def { name = "loopnz", opcodes = new byte[] { 0xE0 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["loopz_rel8"] = new inst_def { name = "loopz", opcodes = new byte[] { 0xE1 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["loopz_rel8"] = new inst_def { name = "loopz", opcodes = new byte[] { 0xE1 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["loop_rel8"] = new inst_def { name = "loop", opcodes = new byte[] { 0xE2 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["loop_rel8"] = new inst_def { name = "loop", opcodes = new byte[] { 0xE2 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jcxz_rel8"] = new inst_def { name = "jcxz", opcodes = new byte[] { 0xE3 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jecxz_rel8"] = new inst_def { name = "jecxz", opcodes = new byte[] { 0xE3 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["in_imm8_al"] = new inst_def { name = "in", opcodes = new byte[] { 0xE4 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["in_imm8_eax"] = new inst_def { name = "in", opcodes = new byte[] { 0xE5 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg } };
				instrs["out_al_imm8"] = new inst_def { name = "out", opcodes = new byte[] { 0xE6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.Imm8 } };
				instrs["out_eax_imm8"] = new inst_def { name = "out", opcodes = new byte[] { 0xE7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.Imm8 } };
				instrs["call_rel1632"] = new inst_def { name = "call", opcodes = new byte[] { 0xE8 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jmp_rel1632"] = new inst_def { name = "jmp", opcodes = new byte[] { 0xE9 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jmpf_ptr161632"] = new inst_def { name = "jmpf", opcodes = new byte[] { 0xEA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["jmp_rel8"] = new inst_def { name = "jmp", opcodes = new byte[] { 0xEB }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["in_dx_al"] = new inst_def { name = "in", opcodes = new byte[] { 0xEC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["in_dx_eax"] = new inst_def { name = "in", opcodes = new byte[] { 0xED }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["out_al_dx"] = new inst_def { name = "out", opcodes = new byte[] { 0xEE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["out_eax_dx"] = new inst_def { name = "out", opcodes = new byte[] { 0xEF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["lock"] = new inst_def { name = "lock", opcodes = new byte[] { 0xF0 }, ops = new inst_def.optype[] {  } };
				instrs["int1"] = new inst_def { name = "int1", opcodes = new byte[] { 0xF1 }, ops = new inst_def.optype[] {  } };
				instrs["repnz"] = new inst_def { name = "repnz", opcodes = new byte[] { 0xF2 }, ops = new inst_def.optype[] {  } };
				instrs["rep"] = new inst_def { name = "rep", opcodes = new byte[] { 0xF2 }, ops = new inst_def.optype[] {  } };
				instrs["repnz"] = new inst_def { name = "repnz", opcodes = new byte[] { 0xF2 }, ops = new inst_def.optype[] {  } };
				instrs["rep"] = new inst_def { name = "rep", opcodes = new byte[] { 0xF2 }, ops = new inst_def.optype[] {  } };
				instrs["repz"] = new inst_def { name = "repz", opcodes = new byte[] { 0xF3 }, ops = new inst_def.optype[] {  } };
				instrs["rep"] = new inst_def { name = "rep", opcodes = new byte[] { 0xF3 }, ops = new inst_def.optype[] {  } };
				instrs["repz"] = new inst_def { name = "repz", opcodes = new byte[] { 0xF3 }, ops = new inst_def.optype[] {  } };
				instrs["rep"] = new inst_def { name = "rep", opcodes = new byte[] { 0xF3 }, ops = new inst_def.optype[] {  } };
				instrs["hlt"] = new inst_def { name = "hlt", opcodes = new byte[] { 0xF4 }, ops = new inst_def.optype[] {  } };
				instrs["cmc"] = new inst_def { name = "cmc", opcodes = new byte[] { 0xF5 }, ops = new inst_def.optype[] {  } };
				instrs["test_rm8"] = new inst_def { name = "test", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["test_rm8"] = new inst_def { name = "test", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 1 };
				instrs["not_rm8"] = new inst_def { name = "not", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 2 };
				instrs["neg_rm8"] = new inst_def { name = "neg", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 3 };
				instrs["mul"] = new inst_def { name = "mul", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] {  }, fixed_r = 4 };
				instrs["imul"] = new inst_def { name = "imul", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["div"] = new inst_def { name = "div", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["idiv"] = new inst_def { name = "idiv", opcodes = new byte[] { 0xF6 }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["test_rm163264"] = new inst_def { name = "test", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["test_rm163264"] = new inst_def { name = "test", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 1 };
				instrs["not_rm163264"] = new inst_def { name = "not", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 2 };
				instrs["neg_rm163264"] = new inst_def { name = "neg", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 3 };
				instrs["mul_rm163264"] = new inst_def { name = "mul", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["imul_rm163264"] = new inst_def { name = "imul", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 5 };
				instrs["div_rm163264"] = new inst_def { name = "div", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 6 };
				instrs["idiv_rm163264"] = new inst_def { name = "idiv", opcodes = new byte[] { 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["clc"] = new inst_def { name = "clc", opcodes = new byte[] { 0xF8 }, ops = new inst_def.optype[] {  } };
				instrs["stc"] = new inst_def { name = "stc", opcodes = new byte[] { 0xF9 }, ops = new inst_def.optype[] {  } };
				instrs["cli"] = new inst_def { name = "cli", opcodes = new byte[] { 0xFA }, ops = new inst_def.optype[] {  } };
				instrs["sti"] = new inst_def { name = "sti", opcodes = new byte[] { 0xFB }, ops = new inst_def.optype[] {  } };
				instrs["cld"] = new inst_def { name = "cld", opcodes = new byte[] { 0xFC }, ops = new inst_def.optype[] {  } };
				instrs["std"] = new inst_def { name = "std", opcodes = new byte[] { 0xFD }, ops = new inst_def.optype[] {  } };
				instrs["inc_rm8"] = new inst_def { name = "inc", opcodes = new byte[] { 0xFE }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["dec_rm8"] = new inst_def { name = "dec", opcodes = new byte[] { 0xFE }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 1 };
				instrs["inc_rm163264"] = new inst_def { name = "inc", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["dec_rm163264"] = new inst_def { name = "dec", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 1 };
				instrs["call_rm1632"] = new inst_def { name = "call", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 2 };
				instrs["call_rm64"] = new inst_def { name = "call", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 2 };
				instrs["callf_m16163264"] = new inst_def { name = "callf", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["jmp_rm1632"] = new inst_def { name = "jmp", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["jmp_rm64"] = new inst_def { name = "jmp", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["jmpf_m16163264"] = new inst_def { name = "jmpf", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["push_rm1632"] = new inst_def { name = "push", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 6 };
				instrs["push_rm6416"] = new inst_def { name = "push", opcodes = new byte[] { 0xFF }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 6 };
				instrs["sldt_m16"] = new inst_def { name = "sldt", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["str_m16"] = new inst_def { name = "str", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["lldt_rm16"] = new inst_def { name = "lldt", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 2 };
				instrs["ltr_rm16"] = new inst_def { name = "ltr", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 3 };
				instrs["verr_rm16"] = new inst_def { name = "verr", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["verw_rm16"] = new inst_def { name = "verw", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 5 };
				instrs["jmpe"] = new inst_def { name = "jmpe", opcodes = new byte[] { 0x0F, 0x00 }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["sgdt_m16and3264"] = new inst_def { name = "sgdt", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["vmcall"] = new inst_def { name = "vmcall", opcodes = new byte[] { 0x0F, 0x01, 0xC1 }, ops = new inst_def.optype[] {  }, fixed_r = 0 };
				instrs["vmlaunch"] = new inst_def { name = "vmlaunch", opcodes = new byte[] { 0x0F, 0x01, 0xC2 }, ops = new inst_def.optype[] {  }, fixed_r = 0 };
				instrs["vmresume"] = new inst_def { name = "vmresume", opcodes = new byte[] { 0x0F, 0x01, 0xC3 }, ops = new inst_def.optype[] {  }, fixed_r = 0 };
				instrs["vmxoff"] = new inst_def { name = "vmxoff", opcodes = new byte[] { 0x0F, 0x01, 0xC4 }, ops = new inst_def.optype[] {  }, fixed_r = 0 };
				instrs["sidt_m16and3264"] = new inst_def { name = "sidt", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["monitor"] = new inst_def { name = "monitor", opcodes = new byte[] { 0x0F, 0x01, 0xC8 }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["mwait"] = new inst_def { name = "mwait", opcodes = new byte[] { 0x0F, 0x01, 0xC9 }, ops = new inst_def.optype[] {  }, fixed_r = 1 };
				instrs["lgdt_m16and3264"] = new inst_def { name = "lgdt", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["xgetbv"] = new inst_def { name = "xgetbv", opcodes = new byte[] { 0x0F, 0x01, 0xD0 }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["xsetbv"] = new inst_def { name = "xsetbv", opcodes = new byte[] { 0x0F, 0x01, 0xD1 }, ops = new inst_def.optype[] {  }, fixed_r = 2 };
				instrs["lidt_m16and3264"] = new inst_def { name = "lidt", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["smsw_m16"] = new inst_def { name = "smsw", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["lmsw_rm16"] = new inst_def { name = "lmsw", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 6 };
				instrs["invlpg_m"] = new inst_def { name = "invlpg", opcodes = new byte[] { 0x0F, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["swapgs"] = new inst_def { name = "swapgs", opcodes = new byte[] { 0x0F, 0x01, 0xF8 }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["rdtscp"] = new inst_def { name = "rdtscp", opcodes = new byte[] { 0x0F, 0x01, 0xF9 }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["lar_m16_r163264"] = new inst_def { name = "lar", opcodes = new byte[] { 0x0F, 0x02 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["lsl_m16_r163264"] = new inst_def { name = "lsl", opcodes = new byte[] { 0x0F, 0x03 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["loadall"] = new inst_def { name = "loadall", opcodes = new byte[] { 0x0F, 0x05 }, ops = new inst_def.optype[] {  } };
				instrs["syscall"] = new inst_def { name = "syscall", opcodes = new byte[] { 0x0F, 0x05 }, ops = new inst_def.optype[] {  } };
				instrs["clts"] = new inst_def { name = "clts", opcodes = new byte[] { 0x0F, 0x06 }, ops = new inst_def.optype[] {  } };
				instrs["loadall"] = new inst_def { name = "loadall", opcodes = new byte[] { 0x0F, 0x07 }, ops = new inst_def.optype[] {  } };
				instrs["sysret"] = new inst_def { name = "sysret", opcodes = new byte[] { 0x0F, 0x07 }, ops = new inst_def.optype[] {  } };
				instrs["invd"] = new inst_def { name = "invd", opcodes = new byte[] { 0x0F, 0x08 }, ops = new inst_def.optype[] {  } };
				instrs["wbinvd"] = new inst_def { name = "wbinvd", opcodes = new byte[] { 0x0F, 0x09 }, ops = new inst_def.optype[] {  } };
				instrs["ud2"] = new inst_def { name = "ud2", opcodes = new byte[] { 0x0F, 0x0B }, ops = new inst_def.optype[] {  } };
				instrs["nop_rm1632"] = new inst_def { name = "nop", opcodes = new byte[] { 0x0F, 0x0D }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["movups_xmmm128_xmm128"] = new inst_def { name = "movups", opcodes = new byte[] { 0x0F, 0x10 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movss_xmmm32real_xmm32real"] = new inst_def { name = "movss", opcodes = new byte[] { 0xF3, 0x0F, 0x10 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movupd_xmmm128_xmm128"] = new inst_def { name = "movupd", opcodes = new byte[] { 0x66, 0x0F, 0x10 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movsd_xmmm64real_xmm64real"] = new inst_def { name = "movsd", opcodes = new byte[] { 0xF2, 0x0F, 0x10 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movups_xmm128_xmmm128"] = new inst_def { name = "movups", opcodes = new byte[] { 0x0F, 0x11 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movss_xmm32real_xmmm32real"] = new inst_def { name = "movss", opcodes = new byte[] { 0xF3, 0x0F, 0x11 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movupd_xmm128_xmmm128"] = new inst_def { name = "movupd", opcodes = new byte[] { 0x66, 0x0F, 0x11 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movsd_xmm64real_xmmm64real"] = new inst_def { name = "movsd", opcodes = new byte[] { 0xF2, 0x0F, 0x11 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movhlps_xmm64_xmm64"] = new inst_def { name = "movhlps", opcodes = new byte[] { 0x0F, 0x12 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movlps_m64_xmm64"] = new inst_def { name = "movlps", opcodes = new byte[] { 0x0F, 0x12 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movlpd_m64_xmm64"] = new inst_def { name = "movlpd", opcodes = new byte[] { 0x66, 0x0F, 0x12 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movddup_xmmm64_xmm64"] = new inst_def { name = "movddup", opcodes = new byte[] { 0xF2, 0x0F, 0x12 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movsldup_xmmm64_xmm64"] = new inst_def { name = "movsldup", opcodes = new byte[] { 0xF3, 0x0F, 0x12 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movlps_xmm64_m64"] = new inst_def { name = "movlps", opcodes = new byte[] { 0x0F, 0x13 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movlpd_xmm64_m64"] = new inst_def { name = "movlpd", opcodes = new byte[] { 0x66, 0x0F, 0x13 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["unpcklps_xmmm64_xmm128"] = new inst_def { name = "unpcklps", opcodes = new byte[] { 0x0F, 0x14 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["unpcklpd_xmmm128_xmm128"] = new inst_def { name = "unpcklpd", opcodes = new byte[] { 0x66, 0x0F, 0x14 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["unpckhps_xmmm64_xmm128"] = new inst_def { name = "unpckhps", opcodes = new byte[] { 0x0F, 0x15 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["unpckhpd_xmmm128_xmm128"] = new inst_def { name = "unpckhpd", opcodes = new byte[] { 0x66, 0x0F, 0x15 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movlhps_xmm64_xmm64"] = new inst_def { name = "movlhps", opcodes = new byte[] { 0x0F, 0x16 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movhps_m64_xmm64"] = new inst_def { name = "movhps", opcodes = new byte[] { 0x0F, 0x16 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movhpd_m64_xmm64"] = new inst_def { name = "movhpd", opcodes = new byte[] { 0x66, 0x0F, 0x16 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movshdup_xmmm64_xmm64"] = new inst_def { name = "movshdup", opcodes = new byte[] { 0xF3, 0x0F, 0x16 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movhps_xmm64_m64"] = new inst_def { name = "movhps", opcodes = new byte[] { 0x0F, 0x17 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movhpd_xmm64_m64"] = new inst_def { name = "movhpd", opcodes = new byte[] { 0x66, 0x0F, 0x17 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["prefetchnta_m8"] = new inst_def { name = "prefetchnta", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["prefetcht0_m8"] = new inst_def { name = "prefetcht0", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["prefetcht1_m8"] = new inst_def { name = "prefetcht1", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["prefetcht2_m8"] = new inst_def { name = "prefetcht2", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 5 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 6 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x18 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x19 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1A }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1B }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1C }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1D }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1E }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["nop_rm1632"] = new inst_def { name = "nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 1 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 2 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 3 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 5 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 6 };
				instrs["hint_nop_rm1632"] = new inst_def { name = "hint_nop", opcodes = new byte[] { 0x0F, 0x1F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 7 };
				instrs["mov_CRn32_r32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x20 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_CRn32_r32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x20 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_CRn64_r64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x20 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_CRn64_r64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x20 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_DRn32_r32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x21 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_DRn32_r32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x21 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_DRn64_r64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x21 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_DRn64_r64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x21 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_r32_CRn32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x22 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r32_CRn32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x22 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r64_CRn64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x22 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r64_CRn64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x22 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r32_DRn32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x23 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r64_DRn64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x23 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r64_DRn64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x23 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r64_DRn64"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x23 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_TRn32_r32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x24 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_TRn32_r32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x24 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["mov_r32_TRn32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x26 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["mov_r32_TRn32"] = new inst_def { name = "mov", opcodes = new byte[] { 0x0F, 0x26 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["movaps_xmmm128_xmm128"] = new inst_def { name = "movaps", opcodes = new byte[] { 0x0F, 0x28 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movapd_xmmm128_xmm128"] = new inst_def { name = "movapd", opcodes = new byte[] { 0x66, 0x0F, 0x28 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movaps_xmm128_xmmm128"] = new inst_def { name = "movaps", opcodes = new byte[] { 0x0F, 0x29 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movapd_xmm128_xmmm128"] = new inst_def { name = "movapd", opcodes = new byte[] { 0x66, 0x0F, 0x29 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtpi2ps_mmm6464_xmm128"] = new inst_def { name = "cvtpi2ps", opcodes = new byte[] { 0x0F, 0x2A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtsi2ss_rm3264_xmm32real"] = new inst_def { name = "cvtsi2ss", opcodes = new byte[] { 0xF3, 0x0F, 0x2A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["cvtpi2pd_mmm6464_xmm128"] = new inst_def { name = "cvtpi2pd", opcodes = new byte[] { 0x66, 0x0F, 0x2A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtsi2sd_rm3264_xmm64real"] = new inst_def { name = "cvtsi2sd", opcodes = new byte[] { 0xF2, 0x0F, 0x2A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["movntps_xmm128_m128"] = new inst_def { name = "movntps", opcodes = new byte[] { 0x0F, 0x2B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movntpd_xmm128_m128"] = new inst_def { name = "movntpd", opcodes = new byte[] { 0x66, 0x0F, 0x2B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvttps2pi_xmmm64_mm64"] = new inst_def { name = "cvttps2pi", opcodes = new byte[] { 0x0F, 0x2C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvttss2si_xmmm32real_r3264"] = new inst_def { name = "cvttss2si", opcodes = new byte[] { 0xF3, 0x0F, 0x2C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["cvttpd2pi_xmmm128_mm64"] = new inst_def { name = "cvttpd2pi", opcodes = new byte[] { 0x66, 0x0F, 0x2C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvttsd2si_xmmm64real_r3264"] = new inst_def { name = "cvttsd2si", opcodes = new byte[] { 0xF2, 0x0F, 0x2C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["cvtps2pi_xmmm64_mm64"] = new inst_def { name = "cvtps2pi", opcodes = new byte[] { 0x0F, 0x2D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtss2si_xmmm32real_r3264"] = new inst_def { name = "cvtss2si", opcodes = new byte[] { 0xF3, 0x0F, 0x2D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["cvtpd2pi_xmmm128_mm64"] = new inst_def { name = "cvtpd2pi", opcodes = new byte[] { 0x66, 0x0F, 0x2D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtsd2si_xmmm64real_r3264"] = new inst_def { name = "cvtsd2si", opcodes = new byte[] { 0xF2, 0x0F, 0x2D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["ucomiss_xmm32real"] = new inst_def { name = "ucomiss", opcodes = new byte[] { 0x0F, 0x2E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["ucomisd_xmm64real"] = new inst_def { name = "ucomisd", opcodes = new byte[] { 0x66, 0x0F, 0x2E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["comiss_xmm32real"] = new inst_def { name = "comiss", opcodes = new byte[] { 0x0F, 0x2F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["comisd_xmm64real"] = new inst_def { name = "comisd", opcodes = new byte[] { 0x66, 0x0F, 0x2F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["wrmsr"] = new inst_def { name = "wrmsr", opcodes = new byte[] { 0x0F, 0x30 }, ops = new inst_def.optype[] {  } };
				instrs["rdtsc"] = new inst_def { name = "rdtsc", opcodes = new byte[] { 0x0F, 0x31 }, ops = new inst_def.optype[] {  } };
				instrs["rdmsr"] = new inst_def { name = "rdmsr", opcodes = new byte[] { 0x0F, 0x32 }, ops = new inst_def.optype[] {  } };
				instrs["rdpmc"] = new inst_def { name = "rdpmc", opcodes = new byte[] { 0x0F, 0x33 }, ops = new inst_def.optype[] {  } };
				instrs["sysenter"] = new inst_def { name = "sysenter", opcodes = new byte[] { 0x0F, 0x34 }, ops = new inst_def.optype[] {  } };
				instrs["sysenter"] = new inst_def { name = "sysenter", opcodes = new byte[] { 0x0F, 0x34 }, ops = new inst_def.optype[] {  } };
				instrs["sysexit"] = new inst_def { name = "sysexit", opcodes = new byte[] { 0x0F, 0x35 }, ops = new inst_def.optype[] {  } };
				instrs["getsec"] = new inst_def { name = "getsec", opcodes = new byte[] { 0x0F, 0x37 }, ops = new inst_def.optype[] {  } };
				instrs["pshufb_mmm6464_mm64"] = new inst_def { name = "pshufb", opcodes = new byte[] { 0x0F, 0x38, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pshufb_xmmm128_xmm128"] = new inst_def { name = "pshufb", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x00 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phaddw_mmm6464_mm64"] = new inst_def { name = "phaddw", opcodes = new byte[] { 0x0F, 0x38, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phaddw_xmmm128_xmm128"] = new inst_def { name = "phaddw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x01 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phaddd_mmm6464_mm64"] = new inst_def { name = "phaddd", opcodes = new byte[] { 0x0F, 0x38, 0x02 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phaddd_xmmm128_xmm128"] = new inst_def { name = "phaddd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x02 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phaddsw_mmm6464_mm64"] = new inst_def { name = "phaddsw", opcodes = new byte[] { 0x0F, 0x38, 0x03 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phaddsw_xmmm128_xmm128"] = new inst_def { name = "phaddsw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x03 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaddubsw_mmm6464_mm64"] = new inst_def { name = "pmaddubsw", opcodes = new byte[] { 0x0F, 0x38, 0x04 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaddubsw_xmmm128_xmm128"] = new inst_def { name = "pmaddubsw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x04 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phsubw_mmm6464_mm64"] = new inst_def { name = "phsubw", opcodes = new byte[] { 0x0F, 0x38, 0x05 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phsubw_xmmm128_xmm128"] = new inst_def { name = "phsubw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x05 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phsubd_mmm6464_mm64"] = new inst_def { name = "phsubd", opcodes = new byte[] { 0x0F, 0x38, 0x06 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phsubd_xmmm128_xmm128"] = new inst_def { name = "phsubd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x06 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phsubsw_mmm6464_mm64"] = new inst_def { name = "phsubsw", opcodes = new byte[] { 0x0F, 0x38, 0x07 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phsubsw_xmmm128_xmm128"] = new inst_def { name = "phsubsw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x07 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psignb_mmm6464_mm64"] = new inst_def { name = "psignb", opcodes = new byte[] { 0x0F, 0x38, 0x08 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psignb_xmmm128_xmm128"] = new inst_def { name = "psignb", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x08 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psignw_mmm6464_mm64"] = new inst_def { name = "psignw", opcodes = new byte[] { 0x0F, 0x38, 0x09 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psignw_xmmm128_xmm128"] = new inst_def { name = "psignw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x09 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psignd_mmm6464_mm64"] = new inst_def { name = "psignd", opcodes = new byte[] { 0x0F, 0x38, 0x0A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psignd_xmmm128_xmm128"] = new inst_def { name = "psignd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x0A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulhrsw_mmm6464_mm64"] = new inst_def { name = "pmulhrsw", opcodes = new byte[] { 0x0F, 0x38, 0x0B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulhrsw_xmmm128_xmm128"] = new inst_def { name = "pmulhrsw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x0B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pblendvb_xmmm128_xmm128"] = new inst_def { name = "pblendvb", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x10 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["blendvps_xmmm128_xmm128"] = new inst_def { name = "blendvps", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x14 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["blendvpd_xmmm128_xmm128"] = new inst_def { name = "blendvpd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x15 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["ptest_xmm128"] = new inst_def { name = "ptest", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x17 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pabsb_mmm6464_mm64"] = new inst_def { name = "pabsb", opcodes = new byte[] { 0x0F, 0x38, 0x1C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pabsb_xmmm128_xmm128"] = new inst_def { name = "pabsb", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x1C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pabsw_mmm6464_mm64"] = new inst_def { name = "pabsw", opcodes = new byte[] { 0x0F, 0x38, 0x1D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pabsw_xmmm128_xmm128"] = new inst_def { name = "pabsw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x1D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pabsd_mmm6464_mm64"] = new inst_def { name = "pabsd", opcodes = new byte[] { 0x0F, 0x38, 0x1E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pabsd_xmmm128_xmm128"] = new inst_def { name = "pabsd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x1E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovsxbw_m64_xmm128"] = new inst_def { name = "pmovsxbw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x20 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovsxbd_m32_xmm128"] = new inst_def { name = "pmovsxbd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x21 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovsxbq_m16_xmm128"] = new inst_def { name = "pmovsxbq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x22 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovsxwd_m64_xmm128"] = new inst_def { name = "pmovsxwd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x23 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovsxwq_m32_xmm128"] = new inst_def { name = "pmovsxwq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x24 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovsxdq_m64_xmm128"] = new inst_def { name = "pmovsxdq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x25 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmuldq_xmmm128_xmm128"] = new inst_def { name = "pmuldq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x28 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpeqq_xmmm128_xmm128"] = new inst_def { name = "pcmpeqq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x29 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movntdqa_m128_xmm128"] = new inst_def { name = "movntdqa", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x2A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packusdw_xmmm128_xmm128"] = new inst_def { name = "packusdw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x2B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovzxbw_m64_xmm128"] = new inst_def { name = "pmovzxbw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x30 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovzxbd_m32_xmm128"] = new inst_def { name = "pmovzxbd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x31 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovzxbq_m16_xmm128"] = new inst_def { name = "pmovzxbq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x32 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovzxwd_m64_xmm128"] = new inst_def { name = "pmovzxwd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x33 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovzxwq_m32_xmm128"] = new inst_def { name = "pmovzxwq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x34 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovzxdq_m64_xmm128"] = new inst_def { name = "pmovzxdq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x35 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtq_xmmm128_xmm128"] = new inst_def { name = "pcmpgtq", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x37 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminsb_xmmm128_xmm128"] = new inst_def { name = "pminsb", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x38 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminsd_xmmm128_xmm128"] = new inst_def { name = "pminsd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x39 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminuw_xmmm128_xmm128"] = new inst_def { name = "pminuw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x3A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminud_xmmm128_xmm128"] = new inst_def { name = "pminud", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x3B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxsb_xmmm128_xmm128"] = new inst_def { name = "pmaxsb", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x3C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxsd_xmmm128_xmm128"] = new inst_def { name = "pmaxsd", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x3D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxuw_xmmm128_xmm128"] = new inst_def { name = "pmaxuw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x3E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxud_xmmm128_xmm128"] = new inst_def { name = "pmaxud", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x3F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulld_xmmm128_xmm128"] = new inst_def { name = "pmulld", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x40 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["phminposuw_xmmm128_xmm128"] = new inst_def { name = "phminposuw", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x41 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["invept_r32"] = new inst_def { name = "invept", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x80 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["invept_r64"] = new inst_def { name = "invept", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x80 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["invvpid_r32"] = new inst_def { name = "invvpid", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x81 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["invvpid_r64"] = new inst_def { name = "invvpid", opcodes = new byte[] { 0x66, 0x0F, 0x38, 0x81 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["movbe_m163264_r163264"] = new inst_def { name = "movbe", opcodes = new byte[] { 0x0F, 0x38, 0xF0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["crc32_rm8_r3264"] = new inst_def { name = "crc32", opcodes = new byte[] { 0xF2, 0x0F, 0x38, 0xF0 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["movbe_r163264_m163264"] = new inst_def { name = "movbe", opcodes = new byte[] { 0x0F, 0x38, 0xF1 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["crc32_rm163264_r3264"] = new inst_def { name = "crc32", opcodes = new byte[] { 0xF2, 0x0F, 0x38, 0xF1 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["roundps_xmmm128_xmm128"] = new inst_def { name = "roundps", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x08 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["roundpd_xmmm128_xmm128"] = new inst_def { name = "roundpd", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x09 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["roundss_xmmm32real_xmm32real"] = new inst_def { name = "roundss", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x0A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["roundsd_xmmm64real_xmm64real"] = new inst_def { name = "roundsd", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x0B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["blendps_xmmm128_xmm128"] = new inst_def { name = "blendps", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x0C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["blendpd_xmmm128_xmm128"] = new inst_def { name = "blendpd", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x0D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pblendw_xmmm128_xmm128"] = new inst_def { name = "pblendw", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x0E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["palignr_mmm6464_mm64"] = new inst_def { name = "palignr", opcodes = new byte[] { 0x0F, 0x3A, 0x0F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["palignr_xmmm128_xmm128"] = new inst_def { name = "palignr", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x0F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pextrb_xmm128_m8"] = new inst_def { name = "pextrb", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x14 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pextrw_xmm128_m16"] = new inst_def { name = "pextrw", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x15 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pextrd_xmm128_rm32"] = new inst_def { name = "pextrd", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x16 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM } };
				instrs["extractps_xmm128_rm32"] = new inst_def { name = "extractps", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x17 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM } };
				instrs["pinsrb_m8_xmm128"] = new inst_def { name = "pinsrb", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x20 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["insertps_xmm128_xmm128"] = new inst_def { name = "insertps", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x21 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pinsrd_rm32_xmm128"] = new inst_def { name = "pinsrd", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x22 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["dpps_xmmm128_xmm128"] = new inst_def { name = "dpps", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x40 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["dppd_xmmm128_xmm128"] = new inst_def { name = "dppd", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x41 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mpsadbw_xmmm128_xmm128"] = new inst_def { name = "mpsadbw", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x42 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpestrm_xmm128"] = new inst_def { name = "pcmpestrm", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x60 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pcmpestri_xmm128"] = new inst_def { name = "pcmpestri", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x61 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pcmpistrm_xmm128"] = new inst_def { name = "pcmpistrm", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x62 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pcmpistri_xmm128"] = new inst_def { name = "pcmpistri", opcodes = new byte[] { 0x66, 0x0F, 0x3A, 0x63 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["cmovo_rm163264_r163264"] = new inst_def { name = "cmovo", opcodes = new byte[] { 0x0F, 0x40 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovno_rm163264_r163264"] = new inst_def { name = "cmovno", opcodes = new byte[] { 0x0F, 0x41 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovb_rm163264_r163264"] = new inst_def { name = "cmovb", opcodes = new byte[] { 0x0F, 0x42 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovnb_rm163264_r163264"] = new inst_def { name = "cmovnb", opcodes = new byte[] { 0x0F, 0x43 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovz_rm163264_r163264"] = new inst_def { name = "cmovz", opcodes = new byte[] { 0x0F, 0x44 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovnz_rm163264_r163264"] = new inst_def { name = "cmovnz", opcodes = new byte[] { 0x0F, 0x45 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovbe_rm163264_r163264"] = new inst_def { name = "cmovbe", opcodes = new byte[] { 0x0F, 0x46 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovnbe_rm163264_r163264"] = new inst_def { name = "cmovnbe", opcodes = new byte[] { 0x0F, 0x47 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovs_rm163264_r163264"] = new inst_def { name = "cmovs", opcodes = new byte[] { 0x0F, 0x48 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovns_rm163264_r163264"] = new inst_def { name = "cmovns", opcodes = new byte[] { 0x0F, 0x49 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovp_rm163264_r163264"] = new inst_def { name = "cmovp", opcodes = new byte[] { 0x0F, 0x4A }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovnp_rm163264_r163264"] = new inst_def { name = "cmovnp", opcodes = new byte[] { 0x0F, 0x4B }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovl_rm163264_r163264"] = new inst_def { name = "cmovl", opcodes = new byte[] { 0x0F, 0x4C }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovnl_rm163264_r163264"] = new inst_def { name = "cmovnl", opcodes = new byte[] { 0x0F, 0x4D }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovle_rm163264_r163264"] = new inst_def { name = "cmovle", opcodes = new byte[] { 0x0F, 0x4E }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmovnle_rm163264_r163264"] = new inst_def { name = "cmovnle", opcodes = new byte[] { 0x0F, 0x4F }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["movmskps_xmm128_r3264"] = new inst_def { name = "movmskps", opcodes = new byte[] { 0x0F, 0x50 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["movmskpd_xmm128_r3264"] = new inst_def { name = "movmskpd", opcodes = new byte[] { 0x66, 0x0F, 0x50 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["sqrtps_xmmm128_xmm128"] = new inst_def { name = "sqrtps", opcodes = new byte[] { 0x0F, 0x51 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["sqrtss_xmmm32real_xmm32real"] = new inst_def { name = "sqrtss", opcodes = new byte[] { 0xF3, 0x0F, 0x51 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["sqrtpd_xmmm128_xmm128"] = new inst_def { name = "sqrtpd", opcodes = new byte[] { 0x66, 0x0F, 0x51 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["sqrtsd_xmmm64real_xmm64real"] = new inst_def { name = "sqrtsd", opcodes = new byte[] { 0xF2, 0x0F, 0x51 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["rsqrtps_xmmm128_xmm128"] = new inst_def { name = "rsqrtps", opcodes = new byte[] { 0x0F, 0x52 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["rsqrtss_xmmm32real_xmm32real"] = new inst_def { name = "rsqrtss", opcodes = new byte[] { 0xF3, 0x0F, 0x52 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["rcpps_xmmm128_xmm128"] = new inst_def { name = "rcpps", opcodes = new byte[] { 0x0F, 0x53 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["rcpss_xmmm32real_xmm32real"] = new inst_def { name = "rcpss", opcodes = new byte[] { 0xF3, 0x0F, 0x53 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["andps_xmmm128_xmm128"] = new inst_def { name = "andps", opcodes = new byte[] { 0x0F, 0x54 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["andpd_xmmm128_xmm128"] = new inst_def { name = "andpd", opcodes = new byte[] { 0x66, 0x0F, 0x54 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["andnps_xmmm128_xmm128"] = new inst_def { name = "andnps", opcodes = new byte[] { 0x0F, 0x55 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["andnpd_xmmm128_xmm128"] = new inst_def { name = "andnpd", opcodes = new byte[] { 0x66, 0x0F, 0x55 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["orps_xmmm128_xmm128"] = new inst_def { name = "orps", opcodes = new byte[] { 0x0F, 0x56 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["orpd_xmmm128_xmm128"] = new inst_def { name = "orpd", opcodes = new byte[] { 0x66, 0x0F, 0x56 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["xorps_xmmm128_xmm128"] = new inst_def { name = "xorps", opcodes = new byte[] { 0x0F, 0x57 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["xorpd_xmmm128_xmm128"] = new inst_def { name = "xorpd", opcodes = new byte[] { 0x66, 0x0F, 0x57 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["addps_xmmm128_xmm128"] = new inst_def { name = "addps", opcodes = new byte[] { 0x0F, 0x58 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["addss_xmmm32real_xmm32real"] = new inst_def { name = "addss", opcodes = new byte[] { 0xF3, 0x0F, 0x58 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["addpd_xmmm128_xmm128"] = new inst_def { name = "addpd", opcodes = new byte[] { 0x66, 0x0F, 0x58 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["addsd_xmmm64real_xmm64real"] = new inst_def { name = "addsd", opcodes = new byte[] { 0xF2, 0x0F, 0x58 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mulps_xmmm128_xmm128"] = new inst_def { name = "mulps", opcodes = new byte[] { 0x0F, 0x59 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mulss_xmmm32real_xmm32real"] = new inst_def { name = "mulss", opcodes = new byte[] { 0xF3, 0x0F, 0x59 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mulpd_xmmm128_xmm128"] = new inst_def { name = "mulpd", opcodes = new byte[] { 0x66, 0x0F, 0x59 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["mulsd_xmmm64real_xmm64real"] = new inst_def { name = "mulsd", opcodes = new byte[] { 0xF2, 0x0F, 0x59 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtps2pd_xmmm128_xmm128"] = new inst_def { name = "cvtps2pd", opcodes = new byte[] { 0x0F, 0x5A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtpd2ps_xmmm128_xmm128"] = new inst_def { name = "cvtpd2ps", opcodes = new byte[] { 0x66, 0x0F, 0x5A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtss2sd_xmmm32real_xmm64real"] = new inst_def { name = "cvtss2sd", opcodes = new byte[] { 0xF3, 0x0F, 0x5A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtsd2ss_xmmm64real_xmm32real"] = new inst_def { name = "cvtsd2ss", opcodes = new byte[] { 0xF2, 0x0F, 0x5A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtdq2ps_xmmm128_xmm128"] = new inst_def { name = "cvtdq2ps", opcodes = new byte[] { 0x0F, 0x5B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtps2dq_xmmm128_xmm128"] = new inst_def { name = "cvtps2dq", opcodes = new byte[] { 0x66, 0x0F, 0x5B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvttps2dq_xmmm128_xmm128"] = new inst_def { name = "cvttps2dq", opcodes = new byte[] { 0xF3, 0x0F, 0x5B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["subps_xmmm128_xmm128"] = new inst_def { name = "subps", opcodes = new byte[] { 0x0F, 0x5C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["subss_xmmm32real_xmm32real"] = new inst_def { name = "subss", opcodes = new byte[] { 0xF3, 0x0F, 0x5C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["subpd_xmmm128_xmm128"] = new inst_def { name = "subpd", opcodes = new byte[] { 0x66, 0x0F, 0x5C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["subsd_xmmm64real_xmm64real"] = new inst_def { name = "subsd", opcodes = new byte[] { 0xF2, 0x0F, 0x5C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["minps_xmmm128_xmm128"] = new inst_def { name = "minps", opcodes = new byte[] { 0x0F, 0x5D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["minss_xmmm32real_xmm32real"] = new inst_def { name = "minss", opcodes = new byte[] { 0xF3, 0x0F, 0x5D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["minpd_xmmm128_xmm128"] = new inst_def { name = "minpd", opcodes = new byte[] { 0x66, 0x0F, 0x5D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["minsd_xmmm64real_xmm64real"] = new inst_def { name = "minsd", opcodes = new byte[] { 0xF2, 0x0F, 0x5D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["divps_xmmm128_xmm128"] = new inst_def { name = "divps", opcodes = new byte[] { 0x0F, 0x5E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["divss_xmmm32real_xmm32real"] = new inst_def { name = "divss", opcodes = new byte[] { 0xF3, 0x0F, 0x5E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["divpd_xmmm128_xmm128"] = new inst_def { name = "divpd", opcodes = new byte[] { 0x66, 0x0F, 0x5E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["divsd_xmmm64real_xmm64real"] = new inst_def { name = "divsd", opcodes = new byte[] { 0xF2, 0x0F, 0x5E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["maxps_xmmm128_xmm128"] = new inst_def { name = "maxps", opcodes = new byte[] { 0x0F, 0x5F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["maxss_xmmm32real_xmm32real"] = new inst_def { name = "maxss", opcodes = new byte[] { 0xF3, 0x0F, 0x5F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["maxpd_xmmm128_xmm128"] = new inst_def { name = "maxpd", opcodes = new byte[] { 0x66, 0x0F, 0x5F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["maxsd_xmmm64real_xmm64real"] = new inst_def { name = "maxsd", opcodes = new byte[] { 0xF2, 0x0F, 0x5F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpcklbw_mmm6432_mm64"] = new inst_def { name = "punpcklbw", opcodes = new byte[] { 0x0F, 0x60 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpcklbw_xmmm128_xmm128"] = new inst_def { name = "punpcklbw", opcodes = new byte[] { 0x66, 0x0F, 0x60 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpcklwd_mmm6432_mm64"] = new inst_def { name = "punpcklwd", opcodes = new byte[] { 0x0F, 0x61 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpcklwd_xmmm128_xmm128"] = new inst_def { name = "punpcklwd", opcodes = new byte[] { 0x66, 0x0F, 0x61 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckldq_mmm6432_mm64"] = new inst_def { name = "punpckldq", opcodes = new byte[] { 0x0F, 0x62 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckldq_xmmm128_xmm128"] = new inst_def { name = "punpckldq", opcodes = new byte[] { 0x66, 0x0F, 0x62 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packsswb_mmm6432_mm64"] = new inst_def { name = "packsswb", opcodes = new byte[] { 0x0F, 0x63 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packsswb_xmmm128_xmm128"] = new inst_def { name = "packsswb", opcodes = new byte[] { 0x66, 0x0F, 0x63 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtb_mmm6432_mm64"] = new inst_def { name = "pcmpgtb", opcodes = new byte[] { 0x0F, 0x64 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtb_xmmm128_xmm128"] = new inst_def { name = "pcmpgtb", opcodes = new byte[] { 0x66, 0x0F, 0x64 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtw_mmm6432_mm64"] = new inst_def { name = "pcmpgtw", opcodes = new byte[] { 0x0F, 0x65 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtw_xmmm128_xmm128"] = new inst_def { name = "pcmpgtw", opcodes = new byte[] { 0x66, 0x0F, 0x65 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtd_mmm6432_mm64"] = new inst_def { name = "pcmpgtd", opcodes = new byte[] { 0x0F, 0x66 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpgtd_xmmm128_xmm128"] = new inst_def { name = "pcmpgtd", opcodes = new byte[] { 0x66, 0x0F, 0x66 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packuswb_mmm6464_mm64"] = new inst_def { name = "packuswb", opcodes = new byte[] { 0x0F, 0x67 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packuswb_xmmm128_xmm128"] = new inst_def { name = "packuswb", opcodes = new byte[] { 0x66, 0x0F, 0x67 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhbw_mmm6464_mm64"] = new inst_def { name = "punpckhbw", opcodes = new byte[] { 0x0F, 0x68 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhbw_xmmm128_xmm128"] = new inst_def { name = "punpckhbw", opcodes = new byte[] { 0x66, 0x0F, 0x68 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhwd_mmm6464_mm64"] = new inst_def { name = "punpckhwd", opcodes = new byte[] { 0x0F, 0x69 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhwd_xmmm128_xmm128"] = new inst_def { name = "punpckhwd", opcodes = new byte[] { 0x66, 0x0F, 0x69 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhdq_mmm6464_mm64"] = new inst_def { name = "punpckhdq", opcodes = new byte[] { 0x0F, 0x6A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhdq_xmmm128_xmm128"] = new inst_def { name = "punpckhdq", opcodes = new byte[] { 0x66, 0x0F, 0x6A }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packssdw_mmm6464_mm64"] = new inst_def { name = "packssdw", opcodes = new byte[] { 0x0F, 0x6B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["packssdw_xmmm128_xmm128"] = new inst_def { name = "packssdw", opcodes = new byte[] { 0x66, 0x0F, 0x6B }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpcklqdq_xmmm128_xmm128"] = new inst_def { name = "punpcklqdq", opcodes = new byte[] { 0x66, 0x0F, 0x6C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["punpckhqdq_xmmm128_xmm128"] = new inst_def { name = "punpckhqdq", opcodes = new byte[] { 0x66, 0x0F, 0x6D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movd_rm32_mm64"] = new inst_def { name = "movd", opcodes = new byte[] { 0x0F, 0x6E }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["movd_rm32_mm64"] = new inst_def { name = "movd", opcodes = new byte[] { 0x0F, 0x6E }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["movd_rm32_xmm128"] = new inst_def { name = "movd", opcodes = new byte[] { 0x66, 0x0F, 0x6E }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["movd_rm32_xmm128"] = new inst_def { name = "movd", opcodes = new byte[] { 0x66, 0x0F, 0x6E }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.FixedReg } };
				instrs["movq_mmm6464_mm64"] = new inst_def { name = "movq", opcodes = new byte[] { 0x0F, 0x6F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movdqa_xmmm128_xmm128"] = new inst_def { name = "movdqa", opcodes = new byte[] { 0x66, 0x0F, 0x6F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movdqu_xmmm128_xmm128"] = new inst_def { name = "movdqu", opcodes = new byte[] { 0xF3, 0x0F, 0x6F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pshufw_mmm6464_mm64"] = new inst_def { name = "pshufw", opcodes = new byte[] { 0x0F, 0x70 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pshuflw_xmmm128_xmm128"] = new inst_def { name = "pshuflw", opcodes = new byte[] { 0xF2, 0x0F, 0x70 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pshufhw_xmmm128_xmm128"] = new inst_def { name = "pshufhw", opcodes = new byte[] { 0xF3, 0x0F, 0x70 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pshufd_xmmm128_xmm128"] = new inst_def { name = "pshufd", opcodes = new byte[] { 0x66, 0x0F, 0x70 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrlw_imm8_mm64"] = new inst_def { name = "psrlw", opcodes = new byte[] { 0x0F, 0x71 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["psrlw_imm8_xmm128"] = new inst_def { name = "psrlw", opcodes = new byte[] { 0x66, 0x0F, 0x71 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["psraw_imm8_mm64"] = new inst_def { name = "psraw", opcodes = new byte[] { 0x0F, 0x71 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["psraw_imm8_xmm128"] = new inst_def { name = "psraw", opcodes = new byte[] { 0x66, 0x0F, 0x71 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["psllw_imm8_mm64"] = new inst_def { name = "psllw", opcodes = new byte[] { 0x0F, 0x71 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["psllw_imm8_xmm128"] = new inst_def { name = "psllw", opcodes = new byte[] { 0x66, 0x0F, 0x71 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["psrld_imm8_mm64"] = new inst_def { name = "psrld", opcodes = new byte[] { 0x0F, 0x72 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["psrld_imm8_xmm128"] = new inst_def { name = "psrld", opcodes = new byte[] { 0x66, 0x0F, 0x72 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["psrad_imm8_mm64"] = new inst_def { name = "psrad", opcodes = new byte[] { 0x0F, 0x72 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["psrad_imm8_xmm128"] = new inst_def { name = "psrad", opcodes = new byte[] { 0x66, 0x0F, 0x72 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["pslld_imm8_mm64"] = new inst_def { name = "pslld", opcodes = new byte[] { 0x0F, 0x72 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["pslld_imm8_xmm128"] = new inst_def { name = "pslld", opcodes = new byte[] { 0x66, 0x0F, 0x72 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["psrlq_imm8_mm64"] = new inst_def { name = "psrlq", opcodes = new byte[] { 0x0F, 0x73 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["psrlq_imm8_xmm128"] = new inst_def { name = "psrlq", opcodes = new byte[] { 0x66, 0x0F, 0x73 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["psrldq_imm8_xmm128"] = new inst_def { name = "psrldq", opcodes = new byte[] { 0x66, 0x0F, 0x73 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["psllq_imm8_mm64"] = new inst_def { name = "psllq", opcodes = new byte[] { 0x0F, 0x73 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["psllq_imm8_xmm128"] = new inst_def { name = "psllq", opcodes = new byte[] { 0x66, 0x0F, 0x73 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["pslldq_imm8_xmm128"] = new inst_def { name = "pslldq", opcodes = new byte[] { 0x66, 0x0F, 0x73 }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["pcmpeqb_mmm6464_mm64"] = new inst_def { name = "pcmpeqb", opcodes = new byte[] { 0x0F, 0x74 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpeqb_xmmm128_xmm128"] = new inst_def { name = "pcmpeqb", opcodes = new byte[] { 0x66, 0x0F, 0x74 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpeqw_mmm6464_mm64"] = new inst_def { name = "pcmpeqw", opcodes = new byte[] { 0x0F, 0x75 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpeqw_xmmm128_xmm128"] = new inst_def { name = "pcmpeqw", opcodes = new byte[] { 0x66, 0x0F, 0x75 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpeqd_mmm6464_mm64"] = new inst_def { name = "pcmpeqd", opcodes = new byte[] { 0x0F, 0x76 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pcmpeqd_xmmm128_xmm128"] = new inst_def { name = "pcmpeqd", opcodes = new byte[] { 0x66, 0x0F, 0x76 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["emms"] = new inst_def { name = "emms", opcodes = new byte[] { 0x0F, 0x77 }, ops = new inst_def.optype[] {  } };
				instrs["vmread_r32_rm32"] = new inst_def { name = "vmread", opcodes = new byte[] { 0x0F, 0x78 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["vmread_r64_rm64"] = new inst_def { name = "vmread", opcodes = new byte[] { 0x0F, 0x78 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["vmwrite_r32"] = new inst_def { name = "vmwrite", opcodes = new byte[] { 0x0F, 0x79 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["vmwrite_r64"] = new inst_def { name = "vmwrite", opcodes = new byte[] { 0x0F, 0x79 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["haddpd_xmmm128_xmm128"] = new inst_def { name = "haddpd", opcodes = new byte[] { 0x66, 0x0F, 0x7C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["haddps_xmmm128_xmm128"] = new inst_def { name = "haddps", opcodes = new byte[] { 0xF2, 0x0F, 0x7C }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["hsubpd_xmmm128_xmm128"] = new inst_def { name = "hsubpd", opcodes = new byte[] { 0x66, 0x0F, 0x7D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["hsubps_xmmm128_xmm128"] = new inst_def { name = "hsubps", opcodes = new byte[] { 0xF2, 0x0F, 0x7D }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movd_mm64_rm32"] = new inst_def { name = "movd", opcodes = new byte[] { 0x0F, 0x7E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM } };
				instrs["movd_mm64_rm32"] = new inst_def { name = "movd", opcodes = new byte[] { 0x0F, 0x7E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM } };
				instrs["movd_xmm128_rm32"] = new inst_def { name = "movd", opcodes = new byte[] { 0x66, 0x0F, 0x7E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM } };
				instrs["movd_xmm128_rm32"] = new inst_def { name = "movd", opcodes = new byte[] { 0x66, 0x0F, 0x7E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.RM } };
				instrs["movq_xmmm64_xmm64"] = new inst_def { name = "movq", opcodes = new byte[] { 0xF3, 0x0F, 0x7E }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movq_mm64_mmm6464"] = new inst_def { name = "movq", opcodes = new byte[] { 0x0F, 0x7F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movdqa_xmm128_xmmm128"] = new inst_def { name = "movdqa", opcodes = new byte[] { 0x66, 0x0F, 0x7F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movdqu_xmm128_xmmm128"] = new inst_def { name = "movdqu", opcodes = new byte[] { 0xF3, 0x0F, 0x7F }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["jo_rel1632"] = new inst_def { name = "jo", opcodes = new byte[] { 0x0F, 0x80 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jno_rel1632"] = new inst_def { name = "jno", opcodes = new byte[] { 0x0F, 0x81 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jb_rel1632"] = new inst_def { name = "jb", opcodes = new byte[] { 0x0F, 0x82 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnb_rel1632"] = new inst_def { name = "jnb", opcodes = new byte[] { 0x0F, 0x83 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jz_rel1632"] = new inst_def { name = "jz", opcodes = new byte[] { 0x0F, 0x84 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnz_rel1632"] = new inst_def { name = "jnz", opcodes = new byte[] { 0x0F, 0x85 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jbe_rel1632"] = new inst_def { name = "jbe", opcodes = new byte[] { 0x0F, 0x86 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnbe_rel1632"] = new inst_def { name = "jnbe", opcodes = new byte[] { 0x0F, 0x87 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["js_rel1632"] = new inst_def { name = "js", opcodes = new byte[] { 0x0F, 0x88 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jns_rel1632"] = new inst_def { name = "jns", opcodes = new byte[] { 0x0F, 0x89 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jp_rel1632"] = new inst_def { name = "jp", opcodes = new byte[] { 0x0F, 0x8A }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnp_rel1632"] = new inst_def { name = "jnp", opcodes = new byte[] { 0x0F, 0x8B }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jl_rel1632"] = new inst_def { name = "jl", opcodes = new byte[] { 0x0F, 0x8C }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnl_rel1632"] = new inst_def { name = "jnl", opcodes = new byte[] { 0x0F, 0x8D }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jle_rel1632"] = new inst_def { name = "jle", opcodes = new byte[] { 0x0F, 0x8E }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["jnle_rel1632"] = new inst_def { name = "jnle", opcodes = new byte[] { 0x0F, 0x8F }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["seto_rm8"] = new inst_def { name = "seto", opcodes = new byte[] { 0x0F, 0x90 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setno_rm8"] = new inst_def { name = "setno", opcodes = new byte[] { 0x0F, 0x91 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setb_rm8"] = new inst_def { name = "setb", opcodes = new byte[] { 0x0F, 0x92 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setnb_rm8"] = new inst_def { name = "setnb", opcodes = new byte[] { 0x0F, 0x93 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setz_rm8"] = new inst_def { name = "setz", opcodes = new byte[] { 0x0F, 0x94 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setnz_rm8"] = new inst_def { name = "setnz", opcodes = new byte[] { 0x0F, 0x95 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setbe_rm8"] = new inst_def { name = "setbe", opcodes = new byte[] { 0x0F, 0x96 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setnbe_rm8"] = new inst_def { name = "setnbe", opcodes = new byte[] { 0x0F, 0x97 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["sets_rm8"] = new inst_def { name = "sets", opcodes = new byte[] { 0x0F, 0x98 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setns_rm8"] = new inst_def { name = "setns", opcodes = new byte[] { 0x0F, 0x99 }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setp_rm8"] = new inst_def { name = "setp", opcodes = new byte[] { 0x0F, 0x9A }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setnp_rm8"] = new inst_def { name = "setnp", opcodes = new byte[] { 0x0F, 0x9B }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setl_rm8"] = new inst_def { name = "setl", opcodes = new byte[] { 0x0F, 0x9C }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setnl_rm8"] = new inst_def { name = "setnl", opcodes = new byte[] { 0x0F, 0x9D }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setle_rm8"] = new inst_def { name = "setle", opcodes = new byte[] { 0x0F, 0x9E }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["setnle_rm8"] = new inst_def { name = "setnle", opcodes = new byte[] { 0x0F, 0x9F }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 0 };
				instrs["push_fs"] = new inst_def { name = "push", opcodes = new byte[] { 0x0F, 0xA0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pop_fs"] = new inst_def { name = "pop", opcodes = new byte[] { 0x0F, 0xA1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["cpuid"] = new inst_def { name = "cpuid", opcodes = new byte[] { 0x0F, 0xA2 }, ops = new inst_def.optype[] {  } };
				instrs["bt_rm163264"] = new inst_def { name = "bt", opcodes = new byte[] { 0x0F, 0xA3 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["shld_r163264_rm163264"] = new inst_def { name = "shld", opcodes = new byte[] { 0x0F, 0xA4 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["shld_r163264_rm163264"] = new inst_def { name = "shld", opcodes = new byte[] { 0x0F, 0xA5 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["push_gs"] = new inst_def { name = "push", opcodes = new byte[] { 0x0F, 0xA8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["pop_gs"] = new inst_def { name = "pop", opcodes = new byte[] { 0x0F, 0xA9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["rsm"] = new inst_def { name = "rsm", opcodes = new byte[] { 0x0F, 0xAA }, ops = new inst_def.optype[] {  } };
				instrs["bts_r163264_rm163264"] = new inst_def { name = "bts", opcodes = new byte[] { 0x0F, 0xAB }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["shrd_r163264_rm163264"] = new inst_def { name = "shrd", opcodes = new byte[] { 0x0F, 0xAC }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["shrd_r163264_rm163264"] = new inst_def { name = "shrd", opcodes = new byte[] { 0x0F, 0xAD }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["fxsave_m512"] = new inst_def { name = "fxsave", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fxsave_m512"] = new inst_def { name = "fxsave", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 0 };
				instrs["fxrstor_m512"] = new inst_def { name = "fxrstor", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["fxrstor_m512"] = new inst_def { name = "fxrstor", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["ldmxcsr_m32"] = new inst_def { name = "ldmxcsr", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 2 };
				instrs["stmxcsr_m32"] = new inst_def { name = "stmxcsr", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 3 };
				instrs["xsave_m"] = new inst_def { name = "xsave", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["xsave_m"] = new inst_def { name = "xsave", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 4 };
				instrs["lfence"] = new inst_def { name = "lfence", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] {  }, fixed_r = 5 };
				instrs["xrstor_m"] = new inst_def { name = "xrstor", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["xrstor_m"] = new inst_def { name = "xrstor", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 5 };
				instrs["mfence"] = new inst_def { name = "mfence", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] {  }, fixed_r = 6 };
				instrs["sfence"] = new inst_def { name = "sfence", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] {  }, fixed_r = 7 };
				instrs["clflush_m8"] = new inst_def { name = "clflush", opcodes = new byte[] { 0x0F, 0xAE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["imul_rm163264_r163264"] = new inst_def { name = "imul", opcodes = new byte[] { 0x0F, 0xAF }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["cmpxchg_r8_rm8"] = new inst_def { name = "cmpxchg", opcodes = new byte[] { 0x0F, 0xB0 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["cmpxchg_r163264_rm163264"] = new inst_def { name = "cmpxchg", opcodes = new byte[] { 0x0F, 0xB1 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["lss_m16163264"] = new inst_def { name = "lss", opcodes = new byte[] { 0x0F, 0xB2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["btr_r163264_rm163264"] = new inst_def { name = "btr", opcodes = new byte[] { 0x0F, 0xB3 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["lfs_m16163264"] = new inst_def { name = "lfs", opcodes = new byte[] { 0x0F, 0xB4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["lgs_m16163264"] = new inst_def { name = "lgs", opcodes = new byte[] { 0x0F, 0xB5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["movzx_rm8_r163264"] = new inst_def { name = "movzx", opcodes = new byte[] { 0x0F, 0xB6 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["movzx_rm16_r163264"] = new inst_def { name = "movzx", opcodes = new byte[] { 0x0F, 0xB7 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["jmpe"] = new inst_def { name = "jmpe", opcodes = new byte[] { 0x0F, 0xB8 }, ops = new inst_def.optype[] {  } };
				instrs["popcnt_rm163264_r163264"] = new inst_def { name = "popcnt", opcodes = new byte[] { 0xF3, 0x0F, 0xB8 }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["ud_g"] = new inst_def { name = "ud", opcodes = new byte[] { 0x0F, 0xB9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["bt_rm163264"] = new inst_def { name = "bt", opcodes = new byte[] { 0x0F, 0xBA }, ops = new inst_def.optype[] { inst_def.optype.RM }, fixed_r = 4 };
				instrs["bts_imm8_rm163264"] = new inst_def { name = "bts", opcodes = new byte[] { 0x0F, 0xBA }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 5 };
				instrs["btr_imm8_rm163264"] = new inst_def { name = "btr", opcodes = new byte[] { 0x0F, 0xBA }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 6 };
				instrs["btc_imm8_rm163264"] = new inst_def { name = "btc", opcodes = new byte[] { 0x0F, 0xBA }, ops = new inst_def.optype[] { inst_def.optype.Imm8, inst_def.optype.RM }, fixed_r = 7 };
				instrs["btc_r163264_rm163264"] = new inst_def { name = "btc", opcodes = new byte[] { 0x0F, 0xBB }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.RM } };
				instrs["bsf_rm163264_r163264"] = new inst_def { name = "bsf", opcodes = new byte[] { 0x0F, 0xBC }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["bsr_rm163264_r163264"] = new inst_def { name = "bsr", opcodes = new byte[] { 0x0F, 0xBD }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["movsx_rm8_r163264"] = new inst_def { name = "movsx", opcodes = new byte[] { 0x0F, 0xBE }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["movsx_rm16_r163264"] = new inst_def { name = "movsx", opcodes = new byte[] { 0x0F, 0xBF }, ops = new inst_def.optype[] { inst_def.optype.RM, inst_def.optype.R } };
				instrs["xadd_rm8"] = new inst_def { name = "xadd", opcodes = new byte[] { 0x0F, 0xC0 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["xadd_rm163264"] = new inst_def { name = "xadd", opcodes = new byte[] { 0x0F, 0xC1 }, ops = new inst_def.optype[] { inst_def.optype.RM } };
				instrs["cmpps_xmmm128_xmm128"] = new inst_def { name = "cmpps", opcodes = new byte[] { 0x0F, 0xC2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cmpss_xmmm32real_xmm32real"] = new inst_def { name = "cmpss", opcodes = new byte[] { 0xF3, 0x0F, 0xC2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cmppd_xmmm128_xmm128"] = new inst_def { name = "cmppd", opcodes = new byte[] { 0x66, 0x0F, 0xC2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cmpsd_xmmm64real_xmm64real"] = new inst_def { name = "cmpsd", opcodes = new byte[] { 0xF2, 0x0F, 0xC2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movnti_r3264_m3264"] = new inst_def { name = "movnti", opcodes = new byte[] { 0x0F, 0xC3 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["pinsrw_r3264_mm64"] = new inst_def { name = "pinsrw", opcodes = new byte[] { 0x0F, 0xC4 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["pinsrw_r3264_xmm128"] = new inst_def { name = "pinsrw", opcodes = new byte[] { 0x66, 0x0F, 0xC4 }, ops = new inst_def.optype[] { inst_def.optype.R, inst_def.optype.FixedReg } };
				instrs["pextrw_mm64_r3264"] = new inst_def { name = "pextrw", opcodes = new byte[] { 0x0F, 0xC5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["pextrw_xmm128_r3264"] = new inst_def { name = "pextrw", opcodes = new byte[] { 0x66, 0x0F, 0xC5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["shufps_xmmm128_xmm128"] = new inst_def { name = "shufps", opcodes = new byte[] { 0x0F, 0xC6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["shufpd_xmmm128_xmm128"] = new inst_def { name = "shufpd", opcodes = new byte[] { 0x66, 0x0F, 0xC6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cmpxchg8b_m64"] = new inst_def { name = "cmpxchg8b", opcodes = new byte[] { 0x0F, 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["cmpxchg8b_m64"] = new inst_def { name = "cmpxchg8b", opcodes = new byte[] { 0x0F, 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 1 };
				instrs["vmptrld_m64"] = new inst_def { name = "vmptrld", opcodes = new byte[] { 0x0F, 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["vmclear_m64"] = new inst_def { name = "vmclear", opcodes = new byte[] { 0x66, 0x0F, 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["vmxon_m64"] = new inst_def { name = "vmxon", opcodes = new byte[] { 0xF3, 0x0F, 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 6 };
				instrs["vmptrst_m64"] = new inst_def { name = "vmptrst", opcodes = new byte[] { 0x0F, 0xC7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg }, fixed_r = 7 };
				instrs["bswap_r163264"] = new inst_def { name = "bswap", opcodes = new byte[] { 0x0F, 0xC8 }, ops = new inst_def.optype[] { inst_def.optype.R } };
				instrs["addsubpd_xmmm128_xmm128"] = new inst_def { name = "addsubpd", opcodes = new byte[] { 0x66, 0x0F, 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["addsubps_xmmm128_xmm128"] = new inst_def { name = "addsubps", opcodes = new byte[] { 0xF2, 0x0F, 0xD0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrlw_mmm6464_mm64"] = new inst_def { name = "psrlw", opcodes = new byte[] { 0x0F, 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrlw_xmmm128_xmm128"] = new inst_def { name = "psrlw", opcodes = new byte[] { 0x66, 0x0F, 0xD1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrld_mmm6464_mm64"] = new inst_def { name = "psrld", opcodes = new byte[] { 0x0F, 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrld_xmmm128_xmm128"] = new inst_def { name = "psrld", opcodes = new byte[] { 0x66, 0x0F, 0xD2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrlq_mmm6464_mm64"] = new inst_def { name = "psrlq", opcodes = new byte[] { 0x0F, 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrlq_xmmm128_xmm128"] = new inst_def { name = "psrlq", opcodes = new byte[] { 0x66, 0x0F, 0xD3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddq_mmm6464_mm64"] = new inst_def { name = "paddq", opcodes = new byte[] { 0x0F, 0xD4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddq_xmmm128_xmm128"] = new inst_def { name = "paddq", opcodes = new byte[] { 0x66, 0x0F, 0xD4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmullw_mmm6464_mm64"] = new inst_def { name = "pmullw", opcodes = new byte[] { 0x0F, 0xD5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmullw_xmmm128_xmm128"] = new inst_def { name = "pmullw", opcodes = new byte[] { 0x66, 0x0F, 0xD5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movq_xmm64_xmmm64"] = new inst_def { name = "movq", opcodes = new byte[] { 0x66, 0x0F, 0xD6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movq2dq_mm64_xmm128"] = new inst_def { name = "movq2dq", opcodes = new byte[] { 0xF3, 0x0F, 0xD6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movdq2q_xmm64_mm64"] = new inst_def { name = "movdq2q", opcodes = new byte[] { 0xF2, 0x0F, 0xD6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmovmskb_mm64_r3264"] = new inst_def { name = "pmovmskb", opcodes = new byte[] { 0x0F, 0xD7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["pmovmskb_xmm128_r3264"] = new inst_def { name = "pmovmskb", opcodes = new byte[] { 0x66, 0x0F, 0xD7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.R } };
				instrs["psubusb_mmm6464_mm64"] = new inst_def { name = "psubusb", opcodes = new byte[] { 0x0F, 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubusb_xmmm128_xmm128"] = new inst_def { name = "psubusb", opcodes = new byte[] { 0x66, 0x0F, 0xD8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubusw_mmm6464_mm64"] = new inst_def { name = "psubusw", opcodes = new byte[] { 0x0F, 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubusw_xmmm128_xmm128"] = new inst_def { name = "psubusw", opcodes = new byte[] { 0x66, 0x0F, 0xD9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminub_mmm6464_mm64"] = new inst_def { name = "pminub", opcodes = new byte[] { 0x0F, 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminub_xmmm128_xmm128"] = new inst_def { name = "pminub", opcodes = new byte[] { 0x66, 0x0F, 0xDA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pand_mmm6432_mm64"] = new inst_def { name = "pand", opcodes = new byte[] { 0x0F, 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pand_xmmm128_xmm128"] = new inst_def { name = "pand", opcodes = new byte[] { 0x66, 0x0F, 0xDB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddusb_mmm6464_mm64"] = new inst_def { name = "paddusb", opcodes = new byte[] { 0x0F, 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddusb_xmmm128_xmm128"] = new inst_def { name = "paddusb", opcodes = new byte[] { 0x66, 0x0F, 0xDC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddusw_mmm6464_mm64"] = new inst_def { name = "paddusw", opcodes = new byte[] { 0x0F, 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddusw_xmmm128_xmm128"] = new inst_def { name = "paddusw", opcodes = new byte[] { 0x66, 0x0F, 0xDD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxub_mmm6464_mm64"] = new inst_def { name = "pmaxub", opcodes = new byte[] { 0x0F, 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxub_xmmm128_xmm128"] = new inst_def { name = "pmaxub", opcodes = new byte[] { 0x66, 0x0F, 0xDE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pandn_mmm6464_mm64"] = new inst_def { name = "pandn", opcodes = new byte[] { 0x0F, 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pandn_xmmm128_xmm128"] = new inst_def { name = "pandn", opcodes = new byte[] { 0x66, 0x0F, 0xDF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pavgb_mmm6464_mm64"] = new inst_def { name = "pavgb", opcodes = new byte[] { 0x0F, 0xE0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pavgb_xmmm128_xmm128"] = new inst_def { name = "pavgb", opcodes = new byte[] { 0x66, 0x0F, 0xE0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psraw_mmm6464_mm64"] = new inst_def { name = "psraw", opcodes = new byte[] { 0x0F, 0xE1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psraw_xmmm128_xmm128"] = new inst_def { name = "psraw", opcodes = new byte[] { 0x66, 0x0F, 0xE1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrad_mmm6464_mm64"] = new inst_def { name = "psrad", opcodes = new byte[] { 0x0F, 0xE2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psrad_xmmm128_xmm128"] = new inst_def { name = "psrad", opcodes = new byte[] { 0x66, 0x0F, 0xE2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pavgw_mmm6464_mm64"] = new inst_def { name = "pavgw", opcodes = new byte[] { 0x0F, 0xE3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pavgw_xmmm128_xmm128"] = new inst_def { name = "pavgw", opcodes = new byte[] { 0x66, 0x0F, 0xE3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulhuw_mmm6464_mm64"] = new inst_def { name = "pmulhuw", opcodes = new byte[] { 0x0F, 0xE4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulhuw_xmmm128_xmm128"] = new inst_def { name = "pmulhuw", opcodes = new byte[] { 0x66, 0x0F, 0xE4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulhw_mmm6464_mm64"] = new inst_def { name = "pmulhw", opcodes = new byte[] { 0x0F, 0xE5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmulhw_xmmm128_xmm128"] = new inst_def { name = "pmulhw", opcodes = new byte[] { 0x66, 0x0F, 0xE5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtpd2dq_xmmm128_xmm128"] = new inst_def { name = "cvtpd2dq", opcodes = new byte[] { 0xF2, 0x0F, 0xE6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvttpd2dq_xmmm128_xmm128"] = new inst_def { name = "cvttpd2dq", opcodes = new byte[] { 0x66, 0x0F, 0xE6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["cvtdq2pd_xmmm128_xmm128"] = new inst_def { name = "cvtdq2pd", opcodes = new byte[] { 0xF3, 0x0F, 0xE6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movntq_mm64_m64"] = new inst_def { name = "movntq", opcodes = new byte[] { 0x0F, 0xE7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["movntdq_xmm128_m128"] = new inst_def { name = "movntdq", opcodes = new byte[] { 0x66, 0x0F, 0xE7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubsb_mmm6464_mm64"] = new inst_def { name = "psubsb", opcodes = new byte[] { 0x0F, 0xE8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubsb_xmmm128_xmm128"] = new inst_def { name = "psubsb", opcodes = new byte[] { 0x66, 0x0F, 0xE8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubsw_mmm6464_mm64"] = new inst_def { name = "psubsw", opcodes = new byte[] { 0x0F, 0xE9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubsw_xmmm128_xmm128"] = new inst_def { name = "psubsw", opcodes = new byte[] { 0x66, 0x0F, 0xE9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminsw_mmm6464_mm64"] = new inst_def { name = "pminsw", opcodes = new byte[] { 0x0F, 0xEA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pminsw_xmmm128_xmm128"] = new inst_def { name = "pminsw", opcodes = new byte[] { 0x66, 0x0F, 0xEA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["por_mmm6464_mm64"] = new inst_def { name = "por", opcodes = new byte[] { 0x0F, 0xEB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["por_xmmm128_xmm128"] = new inst_def { name = "por", opcodes = new byte[] { 0x66, 0x0F, 0xEB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddsb_mmm6464_mm64"] = new inst_def { name = "paddsb", opcodes = new byte[] { 0x0F, 0xEC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddsb_xmmm128_xmm128"] = new inst_def { name = "paddsb", opcodes = new byte[] { 0x66, 0x0F, 0xEC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddsw_mmm6464_mm64"] = new inst_def { name = "paddsw", opcodes = new byte[] { 0x0F, 0xED }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddsw_xmmm128_xmm128"] = new inst_def { name = "paddsw", opcodes = new byte[] { 0x66, 0x0F, 0xED }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxsw_mmm6464_mm64"] = new inst_def { name = "pmaxsw", opcodes = new byte[] { 0x0F, 0xEE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaxsw_xmmm128_xmm128"] = new inst_def { name = "pmaxsw", opcodes = new byte[] { 0x66, 0x0F, 0xEE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pxor_mmm6464_mm64"] = new inst_def { name = "pxor", opcodes = new byte[] { 0x0F, 0xEF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pxor_xmmm128_xmm128"] = new inst_def { name = "pxor", opcodes = new byte[] { 0x66, 0x0F, 0xEF }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["lddqu_m128_xmm128"] = new inst_def { name = "lddqu", opcodes = new byte[] { 0xF2, 0x0F, 0xF0 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psllw_mmm6464_mm64"] = new inst_def { name = "psllw", opcodes = new byte[] { 0x0F, 0xF1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psllw_xmmm128_xmm128"] = new inst_def { name = "psllw", opcodes = new byte[] { 0x66, 0x0F, 0xF1 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pslld_mmm6464_mm64"] = new inst_def { name = "pslld", opcodes = new byte[] { 0x0F, 0xF2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pslld_xmmm128_xmm128"] = new inst_def { name = "pslld", opcodes = new byte[] { 0x66, 0x0F, 0xF2 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psllq_mmm6464_mm64"] = new inst_def { name = "psllq", opcodes = new byte[] { 0x0F, 0xF3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psllq_xmmm128_xmm128"] = new inst_def { name = "psllq", opcodes = new byte[] { 0x66, 0x0F, 0xF3 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmuludq_mmm6464_mm64"] = new inst_def { name = "pmuludq", opcodes = new byte[] { 0x0F, 0xF4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmuludq_xmmm128_xmm128"] = new inst_def { name = "pmuludq", opcodes = new byte[] { 0x66, 0x0F, 0xF4 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaddwd_mmm6432_mm64"] = new inst_def { name = "pmaddwd", opcodes = new byte[] { 0x0F, 0xF5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["pmaddwd_xmmm128_xmm128"] = new inst_def { name = "pmaddwd", opcodes = new byte[] { 0x66, 0x0F, 0xF5 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psadbw_mmm6464_mm64"] = new inst_def { name = "psadbw", opcodes = new byte[] { 0x0F, 0xF6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psadbw_xmmm128_xmm128"] = new inst_def { name = "psadbw", opcodes = new byte[] { 0x66, 0x0F, 0xF6 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["maskmovq_mm64"] = new inst_def { name = "maskmovq", opcodes = new byte[] { 0x0F, 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["maskmovdqu_xmm128"] = new inst_def { name = "maskmovdqu", opcodes = new byte[] { 0x66, 0x0F, 0xF7 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg } };
				instrs["psubb_mmm6464_mm64"] = new inst_def { name = "psubb", opcodes = new byte[] { 0x0F, 0xF8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubb_xmmm128_xmm128"] = new inst_def { name = "psubb", opcodes = new byte[] { 0x66, 0x0F, 0xF8 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubw_mmm6464_mm64"] = new inst_def { name = "psubw", opcodes = new byte[] { 0x0F, 0xF9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubw_xmmm128_xmm128"] = new inst_def { name = "psubw", opcodes = new byte[] { 0x66, 0x0F, 0xF9 }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubd_mmm6464_mm64"] = new inst_def { name = "psubd", opcodes = new byte[] { 0x0F, 0xFA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubd_xmmm128_xmm128"] = new inst_def { name = "psubd", opcodes = new byte[] { 0x66, 0x0F, 0xFA }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubq_mmm6464_mm64"] = new inst_def { name = "psubq", opcodes = new byte[] { 0x0F, 0xFB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["psubq_xmmm128_xmm128"] = new inst_def { name = "psubq", opcodes = new byte[] { 0x66, 0x0F, 0xFB }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddb_mmm6464_mm64"] = new inst_def { name = "paddb", opcodes = new byte[] { 0x0F, 0xFC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddb_xmmm128_xmm128"] = new inst_def { name = "paddb", opcodes = new byte[] { 0x66, 0x0F, 0xFC }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddw_mmm6464_mm64"] = new inst_def { name = "paddw", opcodes = new byte[] { 0x0F, 0xFD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddw_xmmm128_xmm128"] = new inst_def { name = "paddw", opcodes = new byte[] { 0x66, 0x0F, 0xFD }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddd_mmm6464_mm64"] = new inst_def { name = "paddd", opcodes = new byte[] { 0x0F, 0xFE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };
				instrs["paddd_xmmm128_xmm128"] = new inst_def { name = "paddd", opcodes = new byte[] { 0x66, 0x0F, 0xFE }, ops = new inst_def.optype[] { inst_def.optype.FixedReg, inst_def.optype.FixedReg } };

				instr_choices["add"] = new List<inst_def> { instrs["add_r8_rm8"], instrs["add_r163264_rm163264"], instrs["add_rm8_r8"], instrs["add_rm163264_r163264"], instrs["add_imm8_al"], instrs["add_imm1632_rax"], instrs["add_imm8_rm8"], instrs["add_imm1632_rm163264"], instrs["add_imm8_rm8"], instrs["add_imm8_rm163264"] };
				instr_choices["push"] = new List<inst_def> { instrs["push_es"], instrs["push_cs"], instrs["push_ss"], instrs["push_ds"], instrs["push_r1632"], instrs["push_r6416"], instrs["push_imm1632"], instrs["push_imm8"], instrs["push_rm1632"], instrs["push_rm6416"], instrs["push_fs"], instrs["push_gs"] };
				instr_choices["pop"] = new List<inst_def> { instrs["pop_es"], instrs["pop_cs"], instrs["pop_ss"], instrs["pop_ds"], instrs["pop_r1632"], instrs["pop_r6416"], instrs["pop_rm1632"], instrs["pop_rm6416"], instrs["pop_fs"], instrs["pop_gs"] };
				instr_choices["or"] = new List<inst_def> { instrs["or_r8_rm8"], instrs["or_r163264_rm163264"], instrs["or_rm8_r8"], instrs["or_rm163264_r163264"], instrs["or_imm8_al"], instrs["or_imm1632_rax"], instrs["or_imm8_rm8"], instrs["or_imm1632_rm163264"], instrs["or_imm8_rm8"], instrs["or_imm8_rm163264"] };
				instr_choices["adc"] = new List<inst_def> { instrs["adc_r8_rm8"], instrs["adc_r163264_rm163264"], instrs["adc_rm8_r8"], instrs["adc_rm163264_r163264"], instrs["adc_imm8_al"], instrs["adc_imm1632_rax"], instrs["adc_imm8_rm8"], instrs["adc_imm1632_rm163264"], instrs["adc_imm8_rm8"], instrs["adc_imm8_rm163264"] };
				instr_choices["sbb"] = new List<inst_def> { instrs["sbb_r8_rm8"], instrs["sbb_r163264_rm163264"], instrs["sbb_rm8_r8"], instrs["sbb_rm163264_r163264"], instrs["sbb_imm8_al"], instrs["sbb_imm1632_rax"], instrs["sbb_imm8_rm8"], instrs["sbb_imm1632_rm163264"], instrs["sbb_imm8_rm8"], instrs["sbb_imm8_rm163264"] };
				instr_choices["and"] = new List<inst_def> { instrs["and_r8_rm8"], instrs["and_r163264_rm163264"], instrs["and_rm8_r8"], instrs["and_rm163264_r163264"], instrs["and_imm8_al"], instrs["and_imm1632_rax"], instrs["and_imm8_rm8"], instrs["and_imm1632_rm163264"], instrs["and_imm8_rm8"], instrs["and_imm8_rm163264"] };
				instr_choices["es"] = new List<inst_def> { instrs["es"] };
				instr_choices["daa"] = new List<inst_def> { instrs["daa"] };
				instr_choices["sub"] = new List<inst_def> { instrs["sub_r8_rm8"], instrs["sub_r163264_rm163264"], instrs["sub_rm8_r8"], instrs["sub_rm163264_r163264"], instrs["sub_imm8_al"], instrs["sub_imm1632_rax"], instrs["sub_imm8_rm8"], instrs["sub_imm1632_rm163264"], instrs["sub_imm8_rm8"], instrs["sub_imm8_rm163264"] };
				instr_choices["cs"] = new List<inst_def> { instrs["cs"] };
				instr_choices["ntaken"] = new List<inst_def> { instrs["ntaken"] };
				instr_choices["das"] = new List<inst_def> { instrs["das"] };
				instr_choices["xor"] = new List<inst_def> { instrs["xor_r8_rm8"], instrs["xor_r163264_rm163264"], instrs["xor_rm8_r8"], instrs["xor_rm163264_r163264"], instrs["xor_imm8_al"], instrs["xor_imm1632_rax"], instrs["xor_imm8_rm8"], instrs["xor_imm1632_rm163264"], instrs["xor_imm8_rm8"], instrs["xor_imm8_rm163264"] };
				instr_choices["ss"] = new List<inst_def> { instrs["ss"] };
				instr_choices["aaa"] = new List<inst_def> { instrs["aaa"] };
				instr_choices["cmp"] = new List<inst_def> { instrs["cmp_rm8"], instrs["cmp_rm163264"], instrs["cmp_r8"], instrs["cmp_r163264"], instrs["cmp_al"], instrs["cmp_rax"], instrs["cmp_rm8"], instrs["cmp_rm163264"], instrs["cmp_rm8"], instrs["cmp_rm163264"] };
				instr_choices["ds"] = new List<inst_def> { instrs["ds"] };
				instr_choices["taken"] = new List<inst_def> { instrs["taken"] };
				instr_choices["aas"] = new List<inst_def> { instrs["aas"] };
				instr_choices["inc"] = new List<inst_def> { instrs["inc_r1632"], instrs["inc_rm8"], instrs["inc_rm163264"] };
				instr_choices["rex"] = new List<inst_def> { instrs["rex"] };
				instr_choices["rex.b"] = new List<inst_def> { instrs["rex.b"] };
				instr_choices["rex.x"] = new List<inst_def> { instrs["rex.x"] };
				instr_choices["rex.xb"] = new List<inst_def> { instrs["rex.xb"] };
				instr_choices["rex.r"] = new List<inst_def> { instrs["rex.r"] };
				instr_choices["rex.rb"] = new List<inst_def> { instrs["rex.rb"] };
				instr_choices["rex.rx"] = new List<inst_def> { instrs["rex.rx"] };
				instr_choices["rex.rxb"] = new List<inst_def> { instrs["rex.rxb"] };
				instr_choices["dec"] = new List<inst_def> { instrs["dec_r1632"], instrs["dec_rm8"], instrs["dec_rm163264"] };
				instr_choices["rex.w"] = new List<inst_def> { instrs["rex.w"] };
				instr_choices["rex.wb"] = new List<inst_def> { instrs["rex.wb"] };
				instr_choices["rex.wx"] = new List<inst_def> { instrs["rex.wx"] };
				instr_choices["rex.wxb"] = new List<inst_def> { instrs["rex.wxb"] };
				instr_choices["rex.wr"] = new List<inst_def> { instrs["rex.wr"] };
				instr_choices["rex.wrb"] = new List<inst_def> { instrs["rex.wrb"] };
				instr_choices["rex.wrx"] = new List<inst_def> { instrs["rex.wrx"] };
				instr_choices["rex.wrxb"] = new List<inst_def> { instrs["rex.wrxb"] };
				instr_choices["pusha"] = new List<inst_def> { instrs["pusha"] };
				instr_choices["pushad"] = new List<inst_def> { instrs["pushad"] };
				instr_choices["popa"] = new List<inst_def> { instrs["popa"] };
				instr_choices["popad"] = new List<inst_def> { instrs["popad"] };
				instr_choices["bound"] = new List<inst_def> { instrs["bound_r1632"] };
				instr_choices["arpl"] = new List<inst_def> { instrs["arpl_rm16"] };
				instr_choices["movsxd"] = new List<inst_def> { instrs["movsxd_rm32_r3264"] };
				instr_choices["fs"] = new List<inst_def> { instrs["fs"] };
				instr_choices["alter"] = new List<inst_def> { instrs["alter"] };
				instr_choices["gs"] = new List<inst_def> { instrs["gs"] };
				instr_choices["imul"] = new List<inst_def> { instrs["imul_rm163264_r163264"], instrs["imul_rm163264_r163264"], instrs["imul"], instrs["imul_rm163264"], instrs["imul_rm163264_r163264"] };
				instr_choices["ins"] = new List<inst_def> { instrs["ins_dx_esrdi"], instrs["ins_dx_esdi"], instrs["ins_dx_esrdi"] };
				instr_choices["outs"] = new List<inst_def> { instrs["outs_dsrsi_dx"], instrs["outs_dssi_dx"], instrs["outs_dsrsi_dx"] };
				instr_choices["jo"] = new List<inst_def> { instrs["jo_rel8"], instrs["jo_rel1632"] };
				instr_choices["jno"] = new List<inst_def> { instrs["jno_rel8"], instrs["jno_rel1632"] };
				instr_choices["jb"] = new List<inst_def> { instrs["jb_rel8"], instrs["jb_rel1632"] };
				instr_choices["jnb"] = new List<inst_def> { instrs["jnb_rel8"], instrs["jnb_rel1632"] };
				instr_choices["jz"] = new List<inst_def> { instrs["jz_rel8"], instrs["jz_rel1632"] };
				instr_choices["jnz"] = new List<inst_def> { instrs["jnz_rel8"], instrs["jnz_rel1632"] };
				instr_choices["jbe"] = new List<inst_def> { instrs["jbe_rel8"], instrs["jbe_rel1632"] };
				instr_choices["jnbe"] = new List<inst_def> { instrs["jnbe_rel8"], instrs["jnbe_rel1632"] };
				instr_choices["js"] = new List<inst_def> { instrs["js_rel8"], instrs["js_rel1632"] };
				instr_choices["jns"] = new List<inst_def> { instrs["jns_rel8"], instrs["jns_rel1632"] };
				instr_choices["jp"] = new List<inst_def> { instrs["jp_rel8"], instrs["jp_rel1632"] };
				instr_choices["jnp"] = new List<inst_def> { instrs["jnp_rel8"], instrs["jnp_rel1632"] };
				instr_choices["jl"] = new List<inst_def> { instrs["jl_rel8"], instrs["jl_rel1632"] };
				instr_choices["jnl"] = new List<inst_def> { instrs["jnl_rel8"], instrs["jnl_rel1632"] };
				instr_choices["jle"] = new List<inst_def> { instrs["jle_rel8"], instrs["jle_rel1632"] };
				instr_choices["jnle"] = new List<inst_def> { instrs["jnle_rel8"], instrs["jnle_rel1632"] };
				instr_choices["test"] = new List<inst_def> { instrs["test_rm8"], instrs["test_rm163264"], instrs["test_al"], instrs["test_rax"], instrs["test_rm8"], instrs["test_rm8"], instrs["test_rm163264"], instrs["test_rm163264"] };
				instr_choices["xchg"] = new List<inst_def> { instrs["xchg_r8"], instrs["xchg_r163264"], instrs["xchg_r163264"] };
				instr_choices["mov"] = new List<inst_def> { instrs["mov_r8_rm8"], instrs["mov_r163264_rm163264"], instrs["mov_rm8_r8"], instrs["mov_rm163264_r163264"], instrs["mov_Sreg16_m16"], instrs["mov_rm16_Sreg16"], instrs["mov_moffs8_al"], instrs["mov_moffs163264_rax"], instrs["mov_al_moffs8"], instrs["mov_rax_moffs163264"], instrs["mov_imm8_r8"], instrs["mov_imm163264_r163264"], instrs["mov_imm8_rm8"], instrs["mov_imm1632_rm163264"], instrs["mov_CRn32_r32"], instrs["mov_CRn32_r32"], instrs["mov_CRn64_r64"], instrs["mov_CRn64_r64"], instrs["mov_DRn32_r32"], instrs["mov_DRn32_r32"], instrs["mov_DRn64_r64"], instrs["mov_DRn64_r64"], instrs["mov_r32_CRn32"], instrs["mov_r32_CRn32"], instrs["mov_r64_CRn64"], instrs["mov_r64_CRn64"], instrs["mov_r32_DRn32"], instrs["mov_r64_DRn64"], instrs["mov_r64_DRn64"], instrs["mov_r64_DRn64"], instrs["mov_TRn32_r32"], instrs["mov_TRn32_r32"], instrs["mov_r32_TRn32"], instrs["mov_r32_TRn32"] };
				instr_choices["lea"] = new List<inst_def> { instrs["lea_m_r163264"] };
				instr_choices["nop"] = new List<inst_def> { instrs["nop"], instrs["nop"], instrs["nop_rm1632"], instrs["nop_rm1632"] };
				instr_choices["pause"] = new List<inst_def> { instrs["pause"] };
				instr_choices["cbw"] = new List<inst_def> { instrs["cbw"], instrs["cbw"] };
				instr_choices["cwde"] = new List<inst_def> { instrs["cwde"] };
				instr_choices["cwd"] = new List<inst_def> { instrs["cwd"], instrs["cwd"] };
				instr_choices["cdq"] = new List<inst_def> { instrs["cdq"] };
				instr_choices["callf"] = new List<inst_def> { instrs["callf_ptr161632"], instrs["callf_m16163264"] };
				instr_choices["fwait"] = new List<inst_def> { instrs["fwait"] };
				instr_choices["pushf"] = new List<inst_def> { instrs["pushf"], instrs["pushf"] };
				instr_choices["pushfd"] = new List<inst_def> { instrs["pushfd"] };
				instr_choices["popf"] = new List<inst_def> { instrs["popf"], instrs["popf"] };
				instr_choices["popfd"] = new List<inst_def> { instrs["popfd"] };
				instr_choices["sahf"] = new List<inst_def> { instrs["sahf"] };
				instr_choices["lahf"] = new List<inst_def> { instrs["lahf"] };
				instr_choices["movs"] = new List<inst_def> { instrs["movs_dsrsi_esrdi"], instrs["movs_dssi_esdi"], instrs["movs_dsrsi_esrdi"], instrs["movs_rsi_rdi"] };
				instr_choices["cmps"] = new List<inst_def> { instrs["cmps_esrdi"], instrs["cmps_esdi"], instrs["cmps_esrdi"], instrs["cmps_rdi"] };
				instr_choices["stos"] = new List<inst_def> { instrs["stos_esrdi"], instrs["stos_esdi"], instrs["stos_esrdi"], instrs["stos_rdi"] };
				instr_choices["lods"] = new List<inst_def> { instrs["lods_dsrsi"], instrs["lods_dssi"], instrs["lods_dsrsi"], instrs["lods_rsi"] };
				instr_choices["scas"] = new List<inst_def> { instrs["scas_esrdi"], instrs["scas_esdi"], instrs["scas_esrdi"], instrs["scas_rdi"] };
				instr_choices["rol"] = new List<inst_def> { instrs["rol_imm8_rm8"], instrs["rol_imm8_rm163264"], instrs["rol_1_rm8"], instrs["rol_1_rm163264"], instrs["rol_cl_rm8"], instrs["rol_cl_rm163264"] };
				instr_choices["ror"] = new List<inst_def> { instrs["ror_imm8_rm8"], instrs["ror_imm8_rm163264"], instrs["ror_1_rm8"], instrs["ror_1_rm163264"], instrs["ror_cl_rm8"], instrs["ror_cl_rm163264"] };
				instr_choices["rcl"] = new List<inst_def> { instrs["rcl_imm8_rm8"], instrs["rcl_imm8_rm163264"], instrs["rcl_1_rm8"], instrs["rcl_1_rm163264"], instrs["rcl_cl_rm8"], instrs["rcl_cl_rm163264"] };
				instr_choices["rcr"] = new List<inst_def> { instrs["rcr_imm8_rm8"], instrs["rcr_imm8_rm163264"], instrs["rcr_1_rm8"], instrs["rcr_1_rm163264"], instrs["rcr_cl_rm8"], instrs["rcr_cl_rm163264"] };
				instr_choices["shl"] = new List<inst_def> { instrs["shl_imm8_rm8"], instrs["shl_imm8_rm163264"], instrs["shl_1_rm8"], instrs["shl_1_rm163264"], instrs["shl_cl_rm8"], instrs["shl_cl_rm163264"] };
				instr_choices["shr"] = new List<inst_def> { instrs["shr_imm8_rm8"], instrs["shr_imm8_rm163264"], instrs["shr_1_rm8"], instrs["shr_1_rm163264"], instrs["shr_cl_rm8"], instrs["shr_cl_rm163264"] };
				instr_choices["sal"] = new List<inst_def> { instrs["sal_imm8_rm8"], instrs["sal_imm8_rm163264"], instrs["sal_1_rm8"], instrs["sal_1_rm163264"], instrs["sal_cl_rm8"], instrs["sal_cl_rm163264"] };
				instr_choices["sar"] = new List<inst_def> { instrs["sar_imm8_rm8"], instrs["sar_imm8_rm163264"], instrs["sar_1_rm8"], instrs["sar_1_rm163264"], instrs["sar_cl_rm8"], instrs["sar_cl_rm163264"] };
				instr_choices["retn"] = new List<inst_def> { instrs["retn"], instrs["retn"] };
				instr_choices["les"] = new List<inst_def> { instrs["les_m161632"] };
				instr_choices["lds"] = new List<inst_def> { instrs["lds_m161632"] };
				instr_choices["enter"] = new List<inst_def> { instrs["enter_imm16"], instrs["enter_imm16"] };
				instr_choices["leave"] = new List<inst_def> { instrs["leave"], instrs["leave"] };
				instr_choices["retf"] = new List<inst_def> { instrs["retf_imm16"], instrs["retf"] };
				instr_choices["int"] = new List<inst_def> { instrs["int_3"], instrs["int_imm8"] };
				instr_choices["into"] = new List<inst_def> { instrs["into"] };
				instr_choices["iret"] = new List<inst_def> { instrs["iret"], instrs["iret"] };
				instr_choices["iretd"] = new List<inst_def> { instrs["iretd"] };
				instr_choices["aam"] = new List<inst_def> { instrs["aam"] };
				instr_choices["amx"] = new List<inst_def> { instrs["amx_imm8"] };
				instr_choices["aad"] = new List<inst_def> { instrs["aad"] };
				instr_choices["adx"] = new List<inst_def> { instrs["adx_imm8"] };
				instr_choices["salc"] = new List<inst_def> { instrs["salc"] };
				instr_choices["xlat"] = new List<inst_def> { instrs["xlat_dsrbx+al"] };
				instr_choices["fadd"] = new List<inst_def> { instrs["fadd_m32real"], instrs["fadd_m64real"], instrs["fadd_st_est"] };
				instr_choices["fmul"] = new List<inst_def> { instrs["fmul_m32real"], instrs["fmul_m64real"], instrs["fmul_st_est"] };
				instr_choices["fcom"] = new List<inst_def> { instrs["fcom"], instrs["fcom"], instrs["fcom"] };
				instr_choices["fcomp"] = new List<inst_def> { instrs["fcomp"], instrs["fcomp"], instrs["fcomp"] };
				instr_choices["fsub"] = new List<inst_def> { instrs["fsub_m32real"], instrs["fsub_m64real"], instrs["fsub_st_est"] };
				instr_choices["fsubr"] = new List<inst_def> { instrs["fsubr_m32real"], instrs["fsubr_st_est"], instrs["fsubr_m64real"] };
				instr_choices["fdiv"] = new List<inst_def> { instrs["fdiv_m32real"], instrs["fdiv_m64real"], instrs["fdiv_st_est"] };
				instr_choices["fdivr"] = new List<inst_def> { instrs["fdivr_m32real"], instrs["fdivr_st_est"], instrs["fdivr_m64real"] };
				instr_choices["fld"] = new List<inst_def> { instrs["fld_STim32real"], instrs["fld_m80real"], instrs["fld_m64real"] };
				instr_choices["fxch"] = new List<inst_def> { instrs["fxch"], instrs["fxch"] };
				instr_choices["fst"] = new List<inst_def> { instrs["fst_m32real"], instrs["fst_m64real"], instrs["fst_est"] };
				instr_choices["fnop"] = new List<inst_def> { instrs["fnop"] };
				instr_choices["fstp"] = new List<inst_def> { instrs["fstp_m32real"], instrs["fstp_m80real"], instrs["fstp_m64real"], instrs["fstp_est"] };
				instr_choices["fstp1"] = new List<inst_def> { instrs["fstp1_est"], instrs["fstp1_est"] };
				instr_choices["fldenv"] = new List<inst_def> { instrs["fldenv_m1428"] };
				instr_choices["fchs"] = new List<inst_def> { instrs["fchs"] };
				instr_choices["fabs"] = new List<inst_def> { instrs["fabs"] };
				instr_choices["ftst"] = new List<inst_def> { instrs["ftst"] };
				instr_choices["fxam"] = new List<inst_def> { instrs["fxam"] };
				instr_choices["fldcw"] = new List<inst_def> { instrs["fldcw_m16"] };
				instr_choices["fld1"] = new List<inst_def> { instrs["fld1"] };
				instr_choices["fldl2t"] = new List<inst_def> { instrs["fldl2t"] };
				instr_choices["fldl2e"] = new List<inst_def> { instrs["fldl2e"] };
				instr_choices["fldpi"] = new List<inst_def> { instrs["fldpi"] };
				instr_choices["fldlg2"] = new List<inst_def> { instrs["fldlg2"] };
				instr_choices["fldln2"] = new List<inst_def> { instrs["fldln2"] };
				instr_choices["fldz"] = new List<inst_def> { instrs["fldz"] };
				instr_choices["fnstenv"] = new List<inst_def> { instrs["fnstenv_m1428"] };
				instr_choices["fstenv"] = new List<inst_def> { instrs["fstenv_m1428"] };
				instr_choices["f2xm1"] = new List<inst_def> { instrs["f2xm1"] };
				instr_choices["fyl2x"] = new List<inst_def> { instrs["fyl2x"] };
				instr_choices["fptan"] = new List<inst_def> { instrs["fptan"] };
				instr_choices["fpatan"] = new List<inst_def> { instrs["fpatan"] };
				instr_choices["fxtract"] = new List<inst_def> { instrs["fxtract"] };
				instr_choices["fprem1"] = new List<inst_def> { instrs["fprem1"] };
				instr_choices["fdecstp"] = new List<inst_def> { instrs["fdecstp"] };
				instr_choices["fincstp"] = new List<inst_def> { instrs["fincstp"] };
				instr_choices["fnstcw"] = new List<inst_def> { instrs["fnstcw_m16"] };
				instr_choices["fstcw"] = new List<inst_def> { instrs["fstcw_m16"] };
				instr_choices["fprem"] = new List<inst_def> { instrs["fprem"] };
				instr_choices["fyl2xp1"] = new List<inst_def> { instrs["fyl2xp1"] };
				instr_choices["fsqrt"] = new List<inst_def> { instrs["fsqrt"] };
				instr_choices["fsincos"] = new List<inst_def> { instrs["fsincos"] };
				instr_choices["frndint"] = new List<inst_def> { instrs["frndint"] };
				instr_choices["fscale"] = new List<inst_def> { instrs["fscale"] };
				instr_choices["fsin"] = new List<inst_def> { instrs["fsin"] };
				instr_choices["fcos"] = new List<inst_def> { instrs["fcos"] };
				instr_choices["fiadd"] = new List<inst_def> { instrs["fiadd_m32int"], instrs["fiadd_m16int"] };
				instr_choices["fcmovb"] = new List<inst_def> { instrs["fcmovb_est_st"] };
				instr_choices["fimul"] = new List<inst_def> { instrs["fimul_m32int"], instrs["fimul_m16int"] };
				instr_choices["fcmove"] = new List<inst_def> { instrs["fcmove_est_st"] };
				instr_choices["ficom"] = new List<inst_def> { instrs["ficom"], instrs["ficom"] };
				instr_choices["fcmovbe"] = new List<inst_def> { instrs["fcmovbe_est_st"] };
				instr_choices["ficomp"] = new List<inst_def> { instrs["ficomp"], instrs["ficomp"] };
				instr_choices["fcmovu"] = new List<inst_def> { instrs["fcmovu_est_st"] };
				instr_choices["fisub"] = new List<inst_def> { instrs["fisub_m32int"], instrs["fisub_m16int"] };
				instr_choices["fisubr"] = new List<inst_def> { instrs["fisubr_m32int"], instrs["fisubr_m16int"] };
				instr_choices["fucompp"] = new List<inst_def> { instrs["fucompp"] };
				instr_choices["fidiv"] = new List<inst_def> { instrs["fidiv_m32int"], instrs["fidiv_m16int"] };
				instr_choices["fidivr"] = new List<inst_def> { instrs["fidivr_m32int"], instrs["fidivr_m16int"] };
				instr_choices["fild"] = new List<inst_def> { instrs["fild_m32int"], instrs["fild_m16int"], instrs["fild_m64int"] };
				instr_choices["fcmovnb"] = new List<inst_def> { instrs["fcmovnb_est_st"] };
				instr_choices["fisttp"] = new List<inst_def> { instrs["fisttp_m32int"], instrs["fisttp_m64int"], instrs["fisttp_m16int"] };
				instr_choices["fcmovne"] = new List<inst_def> { instrs["fcmovne_est_st"] };
				instr_choices["fist"] = new List<inst_def> { instrs["fist_m32int"], instrs["fist_m16int"] };
				instr_choices["fcmovnbe"] = new List<inst_def> { instrs["fcmovnbe_est_st"] };
				instr_choices["fistp"] = new List<inst_def> { instrs["fistp_m32int"], instrs["fistp_m16int"], instrs["fistp_m64int"] };
				instr_choices["fcmovnu"] = new List<inst_def> { instrs["fcmovnu_est_st"] };
				instr_choices["fneni"] = new List<inst_def> { instrs["fneni"], instrs["fneni"] };
				instr_choices["feni"] = new List<inst_def> { instrs["feni"] };
				instr_choices["fndisi"] = new List<inst_def> { instrs["fndisi"], instrs["fndisi"] };
				instr_choices["fdisi"] = new List<inst_def> { instrs["fdisi"] };
				instr_choices["fnclex"] = new List<inst_def> { instrs["fnclex"] };
				instr_choices["fclex"] = new List<inst_def> { instrs["fclex"] };
				instr_choices["fninit"] = new List<inst_def> { instrs["fninit"] };
				instr_choices["finit"] = new List<inst_def> { instrs["finit"] };
				instr_choices["fnsetpm"] = new List<inst_def> { instrs["fnsetpm"], instrs["fnsetpm"] };
				instr_choices["fsetpm"] = new List<inst_def> { instrs["fsetpm"] };
				instr_choices["fucomi"] = new List<inst_def> { instrs["fucomi_st"] };
				instr_choices["fcomi"] = new List<inst_def> { instrs["fcomi_st"] };
				instr_choices["fcom2"] = new List<inst_def> { instrs["fcom2"], instrs["fcom2"] };
				instr_choices["fcomp3"] = new List<inst_def> { instrs["fcomp3"], instrs["fcomp3"] };
				instr_choices["ffree"] = new List<inst_def> { instrs["ffree_est"] };
				instr_choices["fxch4"] = new List<inst_def> { instrs["fxch4"], instrs["fxch4"] };
				instr_choices["frstor"] = new List<inst_def> { instrs["frstor_m94108"] };
				instr_choices["fucom"] = new List<inst_def> { instrs["fucom"], instrs["fucom"] };
				instr_choices["fucomp"] = new List<inst_def> { instrs["fucomp"], instrs["fucomp"] };
				instr_choices["fnsave"] = new List<inst_def> { instrs["fnsave_m94108"] };
				instr_choices["fsave"] = new List<inst_def> { instrs["fsave_m94108"] };
				instr_choices["fnstsw"] = new List<inst_def> { instrs["fnstsw_m16"], instrs["fnstsw_ax"] };
				instr_choices["fstsw"] = new List<inst_def> { instrs["fstsw_m16"], instrs["fstsw_ax"] };
				instr_choices["faddp"] = new List<inst_def> { instrs["faddp_st_est"], instrs["faddp"] };
				instr_choices["fmulp"] = new List<inst_def> { instrs["fmulp_st_est"], instrs["fmulp"] };
				instr_choices["fcomp5"] = new List<inst_def> { instrs["fcomp5"], instrs["fcomp5"] };
				instr_choices["fcompp"] = new List<inst_def> { instrs["fcompp"] };
				instr_choices["fsubrp"] = new List<inst_def> { instrs["fsubrp_st_est"], instrs["fsubrp"] };
				instr_choices["fsubp"] = new List<inst_def> { instrs["fsubp_st_est"], instrs["fsubp"] };
				instr_choices["fdivrp"] = new List<inst_def> { instrs["fdivrp_st_est"], instrs["fdivrp"] };
				instr_choices["fdivp"] = new List<inst_def> { instrs["fdivp_st_est"], instrs["fdivp"] };
				instr_choices["ffreep"] = new List<inst_def> { instrs["ffreep_est"] };
				instr_choices["fxch7"] = new List<inst_def> { instrs["fxch7"], instrs["fxch7"] };
				instr_choices["fstp8"] = new List<inst_def> { instrs["fstp8_est"], instrs["fstp8_est"] };
				instr_choices["fstp9"] = new List<inst_def> { instrs["fstp9_est"], instrs["fstp9_est"] };
				instr_choices["fbld"] = new List<inst_def> { instrs["fbld_m80dec"] };
				instr_choices["fucomip"] = new List<inst_def> { instrs["fucomip_st"] };
				instr_choices["fbstp"] = new List<inst_def> { instrs["fbstp_m80dec"] };
				instr_choices["fcomip"] = new List<inst_def> { instrs["fcomip_st"] };
				instr_choices["loopnz"] = new List<inst_def> { instrs["loopnz_rel8"], instrs["loopnz_rel8"] };
				instr_choices["loopz"] = new List<inst_def> { instrs["loopz_rel8"], instrs["loopz_rel8"] };
				instr_choices["loop"] = new List<inst_def> { instrs["loop_rel8"], instrs["loop_rel8"] };
				instr_choices["jcxz"] = new List<inst_def> { instrs["jcxz_rel8"] };
				instr_choices["jecxz"] = new List<inst_def> { instrs["jecxz_rel8"] };
				instr_choices["in"] = new List<inst_def> { instrs["in_imm8_al"], instrs["in_imm8_eax"], instrs["in_dx_al"], instrs["in_dx_eax"] };
				instr_choices["out"] = new List<inst_def> { instrs["out_al_imm8"], instrs["out_eax_imm8"], instrs["out_al_dx"], instrs["out_eax_dx"] };
				instr_choices["call"] = new List<inst_def> { instrs["call_rel1632"], instrs["call_rm1632"], instrs["call_rm64"] };
				instr_choices["jmp"] = new List<inst_def> { instrs["jmp_rel1632"], instrs["jmp_rel8"], instrs["jmp_rm1632"], instrs["jmp_rm64"] };
				instr_choices["jmpf"] = new List<inst_def> { instrs["jmpf_ptr161632"], instrs["jmpf_m16163264"] };
				instr_choices["lock"] = new List<inst_def> { instrs["lock"] };
				instr_choices["int1"] = new List<inst_def> { instrs["int1"] };
				instr_choices["repnz"] = new List<inst_def> { instrs["repnz"], instrs["repnz"] };
				instr_choices["rep"] = new List<inst_def> { instrs["rep"], instrs["rep"], instrs["rep"], instrs["rep"] };
				instr_choices["repz"] = new List<inst_def> { instrs["repz"], instrs["repz"] };
				instr_choices["hlt"] = new List<inst_def> { instrs["hlt"] };
				instr_choices["cmc"] = new List<inst_def> { instrs["cmc"] };
				instr_choices["not"] = new List<inst_def> { instrs["not_rm8"], instrs["not_rm163264"] };
				instr_choices["neg"] = new List<inst_def> { instrs["neg_rm8"], instrs["neg_rm163264"] };
				instr_choices["mul"] = new List<inst_def> { instrs["mul"], instrs["mul_rm163264"] };
				instr_choices["div"] = new List<inst_def> { instrs["div"], instrs["div_rm163264"] };
				instr_choices["idiv"] = new List<inst_def> { instrs["idiv"], instrs["idiv_rm163264"] };
				instr_choices["clc"] = new List<inst_def> { instrs["clc"] };
				instr_choices["stc"] = new List<inst_def> { instrs["stc"] };
				instr_choices["cli"] = new List<inst_def> { instrs["cli"] };
				instr_choices["sti"] = new List<inst_def> { instrs["sti"] };
				instr_choices["cld"] = new List<inst_def> { instrs["cld"] };
				instr_choices["std"] = new List<inst_def> { instrs["std"] };
				instr_choices["sldt"] = new List<inst_def> { instrs["sldt_m16"] };
				instr_choices["str"] = new List<inst_def> { instrs["str_m16"] };
				instr_choices["lldt"] = new List<inst_def> { instrs["lldt_rm16"] };
				instr_choices["ltr"] = new List<inst_def> { instrs["ltr_rm16"] };
				instr_choices["verr"] = new List<inst_def> { instrs["verr_rm16"] };
				instr_choices["verw"] = new List<inst_def> { instrs["verw_rm16"] };
				instr_choices["jmpe"] = new List<inst_def> { instrs["jmpe"], instrs["jmpe"] };
				instr_choices["sgdt"] = new List<inst_def> { instrs["sgdt_m16and3264"] };
				instr_choices["vmcall"] = new List<inst_def> { instrs["vmcall"] };
				instr_choices["vmlaunch"] = new List<inst_def> { instrs["vmlaunch"] };
				instr_choices["vmresume"] = new List<inst_def> { instrs["vmresume"] };
				instr_choices["vmxoff"] = new List<inst_def> { instrs["vmxoff"] };
				instr_choices["sidt"] = new List<inst_def> { instrs["sidt_m16and3264"] };
				instr_choices["monitor"] = new List<inst_def> { instrs["monitor"] };
				instr_choices["mwait"] = new List<inst_def> { instrs["mwait"] };
				instr_choices["lgdt"] = new List<inst_def> { instrs["lgdt_m16and3264"] };
				instr_choices["xgetbv"] = new List<inst_def> { instrs["xgetbv"] };
				instr_choices["xsetbv"] = new List<inst_def> { instrs["xsetbv"] };
				instr_choices["lidt"] = new List<inst_def> { instrs["lidt_m16and3264"] };
				instr_choices["smsw"] = new List<inst_def> { instrs["smsw_m16"] };
				instr_choices["lmsw"] = new List<inst_def> { instrs["lmsw_rm16"] };
				instr_choices["invlpg"] = new List<inst_def> { instrs["invlpg_m"] };
				instr_choices["swapgs"] = new List<inst_def> { instrs["swapgs"] };
				instr_choices["rdtscp"] = new List<inst_def> { instrs["rdtscp"] };
				instr_choices["lar"] = new List<inst_def> { instrs["lar_m16_r163264"] };
				instr_choices["lsl"] = new List<inst_def> { instrs["lsl_m16_r163264"] };
				instr_choices["loadall"] = new List<inst_def> { instrs["loadall"], instrs["loadall"] };
				instr_choices["syscall"] = new List<inst_def> { instrs["syscall"] };
				instr_choices["clts"] = new List<inst_def> { instrs["clts"] };
				instr_choices["sysret"] = new List<inst_def> { instrs["sysret"] };
				instr_choices["invd"] = new List<inst_def> { instrs["invd"] };
				instr_choices["wbinvd"] = new List<inst_def> { instrs["wbinvd"] };
				instr_choices["ud2"] = new List<inst_def> { instrs["ud2"] };
				instr_choices["movups"] = new List<inst_def> { instrs["movups_xmmm128_xmm128"], instrs["movups_xmm128_xmmm128"] };
				instr_choices["movss"] = new List<inst_def> { instrs["movss_xmmm32real_xmm32real"], instrs["movss_xmm32real_xmmm32real"] };
				instr_choices["movupd"] = new List<inst_def> { instrs["movupd_xmmm128_xmm128"], instrs["movupd_xmm128_xmmm128"] };
				instr_choices["movsd"] = new List<inst_def> { instrs["movsd_xmmm64real_xmm64real"], instrs["movsd_xmm64real_xmmm64real"] };
				instr_choices["movhlps"] = new List<inst_def> { instrs["movhlps_xmm64_xmm64"] };
				instr_choices["movlps"] = new List<inst_def> { instrs["movlps_m64_xmm64"], instrs["movlps_xmm64_m64"] };
				instr_choices["movlpd"] = new List<inst_def> { instrs["movlpd_m64_xmm64"], instrs["movlpd_xmm64_m64"] };
				instr_choices["movddup"] = new List<inst_def> { instrs["movddup_xmmm64_xmm64"] };
				instr_choices["movsldup"] = new List<inst_def> { instrs["movsldup_xmmm64_xmm64"] };
				instr_choices["unpcklps"] = new List<inst_def> { instrs["unpcklps_xmmm64_xmm128"] };
				instr_choices["unpcklpd"] = new List<inst_def> { instrs["unpcklpd_xmmm128_xmm128"] };
				instr_choices["unpckhps"] = new List<inst_def> { instrs["unpckhps_xmmm64_xmm128"] };
				instr_choices["unpckhpd"] = new List<inst_def> { instrs["unpckhpd_xmmm128_xmm128"] };
				instr_choices["movlhps"] = new List<inst_def> { instrs["movlhps_xmm64_xmm64"] };
				instr_choices["movhps"] = new List<inst_def> { instrs["movhps_m64_xmm64"], instrs["movhps_xmm64_m64"] };
				instr_choices["movhpd"] = new List<inst_def> { instrs["movhpd_m64_xmm64"], instrs["movhpd_xmm64_m64"] };
				instr_choices["movshdup"] = new List<inst_def> { instrs["movshdup_xmmm64_xmm64"] };
				instr_choices["hint_nop"] = new List<inst_def> { instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"], instrs["hint_nop_rm1632"] };
				instr_choices["prefetchnta"] = new List<inst_def> { instrs["prefetchnta_m8"] };
				instr_choices["prefetcht0"] = new List<inst_def> { instrs["prefetcht0_m8"] };
				instr_choices["prefetcht1"] = new List<inst_def> { instrs["prefetcht1_m8"] };
				instr_choices["prefetcht2"] = new List<inst_def> { instrs["prefetcht2_m8"] };
				instr_choices["movaps"] = new List<inst_def> { instrs["movaps_xmmm128_xmm128"], instrs["movaps_xmm128_xmmm128"] };
				instr_choices["movapd"] = new List<inst_def> { instrs["movapd_xmmm128_xmm128"], instrs["movapd_xmm128_xmmm128"] };
				instr_choices["cvtpi2ps"] = new List<inst_def> { instrs["cvtpi2ps_mmm6464_xmm128"] };
				instr_choices["cvtsi2ss"] = new List<inst_def> { instrs["cvtsi2ss_rm3264_xmm32real"] };
				instr_choices["cvtpi2pd"] = new List<inst_def> { instrs["cvtpi2pd_mmm6464_xmm128"] };
				instr_choices["cvtsi2sd"] = new List<inst_def> { instrs["cvtsi2sd_rm3264_xmm64real"] };
				instr_choices["movntps"] = new List<inst_def> { instrs["movntps_xmm128_m128"] };
				instr_choices["movntpd"] = new List<inst_def> { instrs["movntpd_xmm128_m128"] };
				instr_choices["cvttps2pi"] = new List<inst_def> { instrs["cvttps2pi_xmmm64_mm64"] };
				instr_choices["cvttss2si"] = new List<inst_def> { instrs["cvttss2si_xmmm32real_r3264"] };
				instr_choices["cvttpd2pi"] = new List<inst_def> { instrs["cvttpd2pi_xmmm128_mm64"] };
				instr_choices["cvttsd2si"] = new List<inst_def> { instrs["cvttsd2si_xmmm64real_r3264"] };
				instr_choices["cvtps2pi"] = new List<inst_def> { instrs["cvtps2pi_xmmm64_mm64"] };
				instr_choices["cvtss2si"] = new List<inst_def> { instrs["cvtss2si_xmmm32real_r3264"] };
				instr_choices["cvtpd2pi"] = new List<inst_def> { instrs["cvtpd2pi_xmmm128_mm64"] };
				instr_choices["cvtsd2si"] = new List<inst_def> { instrs["cvtsd2si_xmmm64real_r3264"] };
				instr_choices["ucomiss"] = new List<inst_def> { instrs["ucomiss_xmm32real"] };
				instr_choices["ucomisd"] = new List<inst_def> { instrs["ucomisd_xmm64real"] };
				instr_choices["comiss"] = new List<inst_def> { instrs["comiss_xmm32real"] };
				instr_choices["comisd"] = new List<inst_def> { instrs["comisd_xmm64real"] };
				instr_choices["wrmsr"] = new List<inst_def> { instrs["wrmsr"] };
				instr_choices["rdtsc"] = new List<inst_def> { instrs["rdtsc"] };
				instr_choices["rdmsr"] = new List<inst_def> { instrs["rdmsr"] };
				instr_choices["rdpmc"] = new List<inst_def> { instrs["rdpmc"] };
				instr_choices["sysenter"] = new List<inst_def> { instrs["sysenter"], instrs["sysenter"] };
				instr_choices["sysexit"] = new List<inst_def> { instrs["sysexit"] };
				instr_choices["getsec"] = new List<inst_def> { instrs["getsec"] };
				instr_choices["pshufb"] = new List<inst_def> { instrs["pshufb_mmm6464_mm64"], instrs["pshufb_xmmm128_xmm128"] };
				instr_choices["phaddw"] = new List<inst_def> { instrs["phaddw_mmm6464_mm64"], instrs["phaddw_xmmm128_xmm128"] };
				instr_choices["phaddd"] = new List<inst_def> { instrs["phaddd_mmm6464_mm64"], instrs["phaddd_xmmm128_xmm128"] };
				instr_choices["phaddsw"] = new List<inst_def> { instrs["phaddsw_mmm6464_mm64"], instrs["phaddsw_xmmm128_xmm128"] };
				instr_choices["pmaddubsw"] = new List<inst_def> { instrs["pmaddubsw_mmm6464_mm64"], instrs["pmaddubsw_xmmm128_xmm128"] };
				instr_choices["phsubw"] = new List<inst_def> { instrs["phsubw_mmm6464_mm64"], instrs["phsubw_xmmm128_xmm128"] };
				instr_choices["phsubd"] = new List<inst_def> { instrs["phsubd_mmm6464_mm64"], instrs["phsubd_xmmm128_xmm128"] };
				instr_choices["phsubsw"] = new List<inst_def> { instrs["phsubsw_mmm6464_mm64"], instrs["phsubsw_xmmm128_xmm128"] };
				instr_choices["psignb"] = new List<inst_def> { instrs["psignb_mmm6464_mm64"], instrs["psignb_xmmm128_xmm128"] };
				instr_choices["psignw"] = new List<inst_def> { instrs["psignw_mmm6464_mm64"], instrs["psignw_xmmm128_xmm128"] };
				instr_choices["psignd"] = new List<inst_def> { instrs["psignd_mmm6464_mm64"], instrs["psignd_xmmm128_xmm128"] };
				instr_choices["pmulhrsw"] = new List<inst_def> { instrs["pmulhrsw_mmm6464_mm64"], instrs["pmulhrsw_xmmm128_xmm128"] };
				instr_choices["pblendvb"] = new List<inst_def> { instrs["pblendvb_xmmm128_xmm128"] };
				instr_choices["blendvps"] = new List<inst_def> { instrs["blendvps_xmmm128_xmm128"] };
				instr_choices["blendvpd"] = new List<inst_def> { instrs["blendvpd_xmmm128_xmm128"] };
				instr_choices["ptest"] = new List<inst_def> { instrs["ptest_xmm128"] };
				instr_choices["pabsb"] = new List<inst_def> { instrs["pabsb_mmm6464_mm64"], instrs["pabsb_xmmm128_xmm128"] };
				instr_choices["pabsw"] = new List<inst_def> { instrs["pabsw_mmm6464_mm64"], instrs["pabsw_xmmm128_xmm128"] };
				instr_choices["pabsd"] = new List<inst_def> { instrs["pabsd_mmm6464_mm64"], instrs["pabsd_xmmm128_xmm128"] };
				instr_choices["pmovsxbw"] = new List<inst_def> { instrs["pmovsxbw_m64_xmm128"] };
				instr_choices["pmovsxbd"] = new List<inst_def> { instrs["pmovsxbd_m32_xmm128"] };
				instr_choices["pmovsxbq"] = new List<inst_def> { instrs["pmovsxbq_m16_xmm128"] };
				instr_choices["pmovsxwd"] = new List<inst_def> { instrs["pmovsxwd_m64_xmm128"] };
				instr_choices["pmovsxwq"] = new List<inst_def> { instrs["pmovsxwq_m32_xmm128"] };
				instr_choices["pmovsxdq"] = new List<inst_def> { instrs["pmovsxdq_m64_xmm128"] };
				instr_choices["pmuldq"] = new List<inst_def> { instrs["pmuldq_xmmm128_xmm128"] };
				instr_choices["pcmpeqq"] = new List<inst_def> { instrs["pcmpeqq_xmmm128_xmm128"] };
				instr_choices["movntdqa"] = new List<inst_def> { instrs["movntdqa_m128_xmm128"] };
				instr_choices["packusdw"] = new List<inst_def> { instrs["packusdw_xmmm128_xmm128"] };
				instr_choices["pmovzxbw"] = new List<inst_def> { instrs["pmovzxbw_m64_xmm128"] };
				instr_choices["pmovzxbd"] = new List<inst_def> { instrs["pmovzxbd_m32_xmm128"] };
				instr_choices["pmovzxbq"] = new List<inst_def> { instrs["pmovzxbq_m16_xmm128"] };
				instr_choices["pmovzxwd"] = new List<inst_def> { instrs["pmovzxwd_m64_xmm128"] };
				instr_choices["pmovzxwq"] = new List<inst_def> { instrs["pmovzxwq_m32_xmm128"] };
				instr_choices["pmovzxdq"] = new List<inst_def> { instrs["pmovzxdq_m64_xmm128"] };
				instr_choices["pcmpgtq"] = new List<inst_def> { instrs["pcmpgtq_xmmm128_xmm128"] };
				instr_choices["pminsb"] = new List<inst_def> { instrs["pminsb_xmmm128_xmm128"] };
				instr_choices["pminsd"] = new List<inst_def> { instrs["pminsd_xmmm128_xmm128"] };
				instr_choices["pminuw"] = new List<inst_def> { instrs["pminuw_xmmm128_xmm128"] };
				instr_choices["pminud"] = new List<inst_def> { instrs["pminud_xmmm128_xmm128"] };
				instr_choices["pmaxsb"] = new List<inst_def> { instrs["pmaxsb_xmmm128_xmm128"] };
				instr_choices["pmaxsd"] = new List<inst_def> { instrs["pmaxsd_xmmm128_xmm128"] };
				instr_choices["pmaxuw"] = new List<inst_def> { instrs["pmaxuw_xmmm128_xmm128"] };
				instr_choices["pmaxud"] = new List<inst_def> { instrs["pmaxud_xmmm128_xmm128"] };
				instr_choices["pmulld"] = new List<inst_def> { instrs["pmulld_xmmm128_xmm128"] };
				instr_choices["phminposuw"] = new List<inst_def> { instrs["phminposuw_xmmm128_xmm128"] };
				instr_choices["invept"] = new List<inst_def> { instrs["invept_r32"], instrs["invept_r64"] };
				instr_choices["invvpid"] = new List<inst_def> { instrs["invvpid_r32"], instrs["invvpid_r64"] };
				instr_choices["movbe"] = new List<inst_def> { instrs["movbe_m163264_r163264"], instrs["movbe_r163264_m163264"] };
				instr_choices["crc32"] = new List<inst_def> { instrs["crc32_rm8_r3264"], instrs["crc32_rm163264_r3264"] };
				instr_choices["roundps"] = new List<inst_def> { instrs["roundps_xmmm128_xmm128"] };
				instr_choices["roundpd"] = new List<inst_def> { instrs["roundpd_xmmm128_xmm128"] };
				instr_choices["roundss"] = new List<inst_def> { instrs["roundss_xmmm32real_xmm32real"] };
				instr_choices["roundsd"] = new List<inst_def> { instrs["roundsd_xmmm64real_xmm64real"] };
				instr_choices["blendps"] = new List<inst_def> { instrs["blendps_xmmm128_xmm128"] };
				instr_choices["blendpd"] = new List<inst_def> { instrs["blendpd_xmmm128_xmm128"] };
				instr_choices["pblendw"] = new List<inst_def> { instrs["pblendw_xmmm128_xmm128"] };
				instr_choices["palignr"] = new List<inst_def> { instrs["palignr_mmm6464_mm64"], instrs["palignr_xmmm128_xmm128"] };
				instr_choices["pextrb"] = new List<inst_def> { instrs["pextrb_xmm128_m8"] };
				instr_choices["pextrw"] = new List<inst_def> { instrs["pextrw_xmm128_m16"], instrs["pextrw_mm64_r3264"], instrs["pextrw_xmm128_r3264"] };
				instr_choices["pextrd"] = new List<inst_def> { instrs["pextrd_xmm128_rm32"] };
				instr_choices["extractps"] = new List<inst_def> { instrs["extractps_xmm128_rm32"] };
				instr_choices["pinsrb"] = new List<inst_def> { instrs["pinsrb_m8_xmm128"] };
				instr_choices["insertps"] = new List<inst_def> { instrs["insertps_xmm128_xmm128"] };
				instr_choices["pinsrd"] = new List<inst_def> { instrs["pinsrd_rm32_xmm128"] };
				instr_choices["dpps"] = new List<inst_def> { instrs["dpps_xmmm128_xmm128"] };
				instr_choices["dppd"] = new List<inst_def> { instrs["dppd_xmmm128_xmm128"] };
				instr_choices["mpsadbw"] = new List<inst_def> { instrs["mpsadbw_xmmm128_xmm128"] };
				instr_choices["pcmpestrm"] = new List<inst_def> { instrs["pcmpestrm_xmm128"] };
				instr_choices["pcmpestri"] = new List<inst_def> { instrs["pcmpestri_xmm128"] };
				instr_choices["pcmpistrm"] = new List<inst_def> { instrs["pcmpistrm_xmm128"] };
				instr_choices["pcmpistri"] = new List<inst_def> { instrs["pcmpistri_xmm128"] };
				instr_choices["cmovo"] = new List<inst_def> { instrs["cmovo_rm163264_r163264"] };
				instr_choices["cmovno"] = new List<inst_def> { instrs["cmovno_rm163264_r163264"] };
				instr_choices["cmovb"] = new List<inst_def> { instrs["cmovb_rm163264_r163264"] };
				instr_choices["cmovnb"] = new List<inst_def> { instrs["cmovnb_rm163264_r163264"] };
				instr_choices["cmovz"] = new List<inst_def> { instrs["cmovz_rm163264_r163264"] };
				instr_choices["cmovnz"] = new List<inst_def> { instrs["cmovnz_rm163264_r163264"] };
				instr_choices["cmovbe"] = new List<inst_def> { instrs["cmovbe_rm163264_r163264"] };
				instr_choices["cmovnbe"] = new List<inst_def> { instrs["cmovnbe_rm163264_r163264"] };
				instr_choices["cmovs"] = new List<inst_def> { instrs["cmovs_rm163264_r163264"] };
				instr_choices["cmovns"] = new List<inst_def> { instrs["cmovns_rm163264_r163264"] };
				instr_choices["cmovp"] = new List<inst_def> { instrs["cmovp_rm163264_r163264"] };
				instr_choices["cmovnp"] = new List<inst_def> { instrs["cmovnp_rm163264_r163264"] };
				instr_choices["cmovl"] = new List<inst_def> { instrs["cmovl_rm163264_r163264"] };
				instr_choices["cmovnl"] = new List<inst_def> { instrs["cmovnl_rm163264_r163264"] };
				instr_choices["cmovle"] = new List<inst_def> { instrs["cmovle_rm163264_r163264"] };
				instr_choices["cmovnle"] = new List<inst_def> { instrs["cmovnle_rm163264_r163264"] };
				instr_choices["movmskps"] = new List<inst_def> { instrs["movmskps_xmm128_r3264"] };
				instr_choices["movmskpd"] = new List<inst_def> { instrs["movmskpd_xmm128_r3264"] };
				instr_choices["sqrtps"] = new List<inst_def> { instrs["sqrtps_xmmm128_xmm128"] };
				instr_choices["sqrtss"] = new List<inst_def> { instrs["sqrtss_xmmm32real_xmm32real"] };
				instr_choices["sqrtpd"] = new List<inst_def> { instrs["sqrtpd_xmmm128_xmm128"] };
				instr_choices["sqrtsd"] = new List<inst_def> { instrs["sqrtsd_xmmm64real_xmm64real"] };
				instr_choices["rsqrtps"] = new List<inst_def> { instrs["rsqrtps_xmmm128_xmm128"] };
				instr_choices["rsqrtss"] = new List<inst_def> { instrs["rsqrtss_xmmm32real_xmm32real"] };
				instr_choices["rcpps"] = new List<inst_def> { instrs["rcpps_xmmm128_xmm128"] };
				instr_choices["rcpss"] = new List<inst_def> { instrs["rcpss_xmmm32real_xmm32real"] };
				instr_choices["andps"] = new List<inst_def> { instrs["andps_xmmm128_xmm128"] };
				instr_choices["andpd"] = new List<inst_def> { instrs["andpd_xmmm128_xmm128"] };
				instr_choices["andnps"] = new List<inst_def> { instrs["andnps_xmmm128_xmm128"] };
				instr_choices["andnpd"] = new List<inst_def> { instrs["andnpd_xmmm128_xmm128"] };
				instr_choices["orps"] = new List<inst_def> { instrs["orps_xmmm128_xmm128"] };
				instr_choices["orpd"] = new List<inst_def> { instrs["orpd_xmmm128_xmm128"] };
				instr_choices["xorps"] = new List<inst_def> { instrs["xorps_xmmm128_xmm128"] };
				instr_choices["xorpd"] = new List<inst_def> { instrs["xorpd_xmmm128_xmm128"] };
				instr_choices["addps"] = new List<inst_def> { instrs["addps_xmmm128_xmm128"] };
				instr_choices["addss"] = new List<inst_def> { instrs["addss_xmmm32real_xmm32real"] };
				instr_choices["addpd"] = new List<inst_def> { instrs["addpd_xmmm128_xmm128"] };
				instr_choices["addsd"] = new List<inst_def> { instrs["addsd_xmmm64real_xmm64real"] };
				instr_choices["mulps"] = new List<inst_def> { instrs["mulps_xmmm128_xmm128"] };
				instr_choices["mulss"] = new List<inst_def> { instrs["mulss_xmmm32real_xmm32real"] };
				instr_choices["mulpd"] = new List<inst_def> { instrs["mulpd_xmmm128_xmm128"] };
				instr_choices["mulsd"] = new List<inst_def> { instrs["mulsd_xmmm64real_xmm64real"] };
				instr_choices["cvtps2pd"] = new List<inst_def> { instrs["cvtps2pd_xmmm128_xmm128"] };
				instr_choices["cvtpd2ps"] = new List<inst_def> { instrs["cvtpd2ps_xmmm128_xmm128"] };
				instr_choices["cvtss2sd"] = new List<inst_def> { instrs["cvtss2sd_xmmm32real_xmm64real"] };
				instr_choices["cvtsd2ss"] = new List<inst_def> { instrs["cvtsd2ss_xmmm64real_xmm32real"] };
				instr_choices["cvtdq2ps"] = new List<inst_def> { instrs["cvtdq2ps_xmmm128_xmm128"] };
				instr_choices["cvtps2dq"] = new List<inst_def> { instrs["cvtps2dq_xmmm128_xmm128"] };
				instr_choices["cvttps2dq"] = new List<inst_def> { instrs["cvttps2dq_xmmm128_xmm128"] };
				instr_choices["subps"] = new List<inst_def> { instrs["subps_xmmm128_xmm128"] };
				instr_choices["subss"] = new List<inst_def> { instrs["subss_xmmm32real_xmm32real"] };
				instr_choices["subpd"] = new List<inst_def> { instrs["subpd_xmmm128_xmm128"] };
				instr_choices["subsd"] = new List<inst_def> { instrs["subsd_xmmm64real_xmm64real"] };
				instr_choices["minps"] = new List<inst_def> { instrs["minps_xmmm128_xmm128"] };
				instr_choices["minss"] = new List<inst_def> { instrs["minss_xmmm32real_xmm32real"] };
				instr_choices["minpd"] = new List<inst_def> { instrs["minpd_xmmm128_xmm128"] };
				instr_choices["minsd"] = new List<inst_def> { instrs["minsd_xmmm64real_xmm64real"] };
				instr_choices["divps"] = new List<inst_def> { instrs["divps_xmmm128_xmm128"] };
				instr_choices["divss"] = new List<inst_def> { instrs["divss_xmmm32real_xmm32real"] };
				instr_choices["divpd"] = new List<inst_def> { instrs["divpd_xmmm128_xmm128"] };
				instr_choices["divsd"] = new List<inst_def> { instrs["divsd_xmmm64real_xmm64real"] };
				instr_choices["maxps"] = new List<inst_def> { instrs["maxps_xmmm128_xmm128"] };
				instr_choices["maxss"] = new List<inst_def> { instrs["maxss_xmmm32real_xmm32real"] };
				instr_choices["maxpd"] = new List<inst_def> { instrs["maxpd_xmmm128_xmm128"] };
				instr_choices["maxsd"] = new List<inst_def> { instrs["maxsd_xmmm64real_xmm64real"] };
				instr_choices["punpcklbw"] = new List<inst_def> { instrs["punpcklbw_mmm6432_mm64"], instrs["punpcklbw_xmmm128_xmm128"] };
				instr_choices["punpcklwd"] = new List<inst_def> { instrs["punpcklwd_mmm6432_mm64"], instrs["punpcklwd_xmmm128_xmm128"] };
				instr_choices["punpckldq"] = new List<inst_def> { instrs["punpckldq_mmm6432_mm64"], instrs["punpckldq_xmmm128_xmm128"] };
				instr_choices["packsswb"] = new List<inst_def> { instrs["packsswb_mmm6432_mm64"], instrs["packsswb_xmmm128_xmm128"] };
				instr_choices["pcmpgtb"] = new List<inst_def> { instrs["pcmpgtb_mmm6432_mm64"], instrs["pcmpgtb_xmmm128_xmm128"] };
				instr_choices["pcmpgtw"] = new List<inst_def> { instrs["pcmpgtw_mmm6432_mm64"], instrs["pcmpgtw_xmmm128_xmm128"] };
				instr_choices["pcmpgtd"] = new List<inst_def> { instrs["pcmpgtd_mmm6432_mm64"], instrs["pcmpgtd_xmmm128_xmm128"] };
				instr_choices["packuswb"] = new List<inst_def> { instrs["packuswb_mmm6464_mm64"], instrs["packuswb_xmmm128_xmm128"] };
				instr_choices["punpckhbw"] = new List<inst_def> { instrs["punpckhbw_mmm6464_mm64"], instrs["punpckhbw_xmmm128_xmm128"] };
				instr_choices["punpckhwd"] = new List<inst_def> { instrs["punpckhwd_mmm6464_mm64"], instrs["punpckhwd_xmmm128_xmm128"] };
				instr_choices["punpckhdq"] = new List<inst_def> { instrs["punpckhdq_mmm6464_mm64"], instrs["punpckhdq_xmmm128_xmm128"] };
				instr_choices["packssdw"] = new List<inst_def> { instrs["packssdw_mmm6464_mm64"], instrs["packssdw_xmmm128_xmm128"] };
				instr_choices["punpcklqdq"] = new List<inst_def> { instrs["punpcklqdq_xmmm128_xmm128"] };
				instr_choices["punpckhqdq"] = new List<inst_def> { instrs["punpckhqdq_xmmm128_xmm128"] };
				instr_choices["movd"] = new List<inst_def> { instrs["movd_rm32_mm64"], instrs["movd_rm32_mm64"], instrs["movd_rm32_xmm128"], instrs["movd_rm32_xmm128"], instrs["movd_mm64_rm32"], instrs["movd_mm64_rm32"], instrs["movd_xmm128_rm32"], instrs["movd_xmm128_rm32"] };
				instr_choices["movq"] = new List<inst_def> { instrs["movq_mmm6464_mm64"], instrs["movq_xmmm64_xmm64"], instrs["movq_mm64_mmm6464"], instrs["movq_xmm64_xmmm64"] };
				instr_choices["movdqa"] = new List<inst_def> { instrs["movdqa_xmmm128_xmm128"], instrs["movdqa_xmm128_xmmm128"] };
				instr_choices["movdqu"] = new List<inst_def> { instrs["movdqu_xmmm128_xmm128"], instrs["movdqu_xmm128_xmmm128"] };
				instr_choices["pshufw"] = new List<inst_def> { instrs["pshufw_mmm6464_mm64"] };
				instr_choices["pshuflw"] = new List<inst_def> { instrs["pshuflw_xmmm128_xmm128"] };
				instr_choices["pshufhw"] = new List<inst_def> { instrs["pshufhw_xmmm128_xmm128"] };
				instr_choices["pshufd"] = new List<inst_def> { instrs["pshufd_xmmm128_xmm128"] };
				instr_choices["psrlw"] = new List<inst_def> { instrs["psrlw_imm8_mm64"], instrs["psrlw_imm8_xmm128"], instrs["psrlw_mmm6464_mm64"], instrs["psrlw_xmmm128_xmm128"] };
				instr_choices["psraw"] = new List<inst_def> { instrs["psraw_imm8_mm64"], instrs["psraw_imm8_xmm128"], instrs["psraw_mmm6464_mm64"], instrs["psraw_xmmm128_xmm128"] };
				instr_choices["psllw"] = new List<inst_def> { instrs["psllw_imm8_mm64"], instrs["psllw_imm8_xmm128"], instrs["psllw_mmm6464_mm64"], instrs["psllw_xmmm128_xmm128"] };
				instr_choices["psrld"] = new List<inst_def> { instrs["psrld_imm8_mm64"], instrs["psrld_imm8_xmm128"], instrs["psrld_mmm6464_mm64"], instrs["psrld_xmmm128_xmm128"] };
				instr_choices["psrad"] = new List<inst_def> { instrs["psrad_imm8_mm64"], instrs["psrad_imm8_xmm128"], instrs["psrad_mmm6464_mm64"], instrs["psrad_xmmm128_xmm128"] };
				instr_choices["pslld"] = new List<inst_def> { instrs["pslld_imm8_mm64"], instrs["pslld_imm8_xmm128"], instrs["pslld_mmm6464_mm64"], instrs["pslld_xmmm128_xmm128"] };
				instr_choices["psrlq"] = new List<inst_def> { instrs["psrlq_imm8_mm64"], instrs["psrlq_imm8_xmm128"], instrs["psrlq_mmm6464_mm64"], instrs["psrlq_xmmm128_xmm128"] };
				instr_choices["psrldq"] = new List<inst_def> { instrs["psrldq_imm8_xmm128"] };
				instr_choices["psllq"] = new List<inst_def> { instrs["psllq_imm8_mm64"], instrs["psllq_imm8_xmm128"], instrs["psllq_mmm6464_mm64"], instrs["psllq_xmmm128_xmm128"] };
				instr_choices["pslldq"] = new List<inst_def> { instrs["pslldq_imm8_xmm128"] };
				instr_choices["pcmpeqb"] = new List<inst_def> { instrs["pcmpeqb_mmm6464_mm64"], instrs["pcmpeqb_xmmm128_xmm128"] };
				instr_choices["pcmpeqw"] = new List<inst_def> { instrs["pcmpeqw_mmm6464_mm64"], instrs["pcmpeqw_xmmm128_xmm128"] };
				instr_choices["pcmpeqd"] = new List<inst_def> { instrs["pcmpeqd_mmm6464_mm64"], instrs["pcmpeqd_xmmm128_xmm128"] };
				instr_choices["emms"] = new List<inst_def> { instrs["emms"] };
				instr_choices["vmread"] = new List<inst_def> { instrs["vmread_r32_rm32"], instrs["vmread_r64_rm64"] };
				instr_choices["vmwrite"] = new List<inst_def> { instrs["vmwrite_r32"], instrs["vmwrite_r64"] };
				instr_choices["haddpd"] = new List<inst_def> { instrs["haddpd_xmmm128_xmm128"] };
				instr_choices["haddps"] = new List<inst_def> { instrs["haddps_xmmm128_xmm128"] };
				instr_choices["hsubpd"] = new List<inst_def> { instrs["hsubpd_xmmm128_xmm128"] };
				instr_choices["hsubps"] = new List<inst_def> { instrs["hsubps_xmmm128_xmm128"] };
				instr_choices["seto"] = new List<inst_def> { instrs["seto_rm8"] };
				instr_choices["setno"] = new List<inst_def> { instrs["setno_rm8"] };
				instr_choices["setb"] = new List<inst_def> { instrs["setb_rm8"] };
				instr_choices["setnb"] = new List<inst_def> { instrs["setnb_rm8"] };
				instr_choices["setz"] = new List<inst_def> { instrs["setz_rm8"] };
				instr_choices["setnz"] = new List<inst_def> { instrs["setnz_rm8"] };
				instr_choices["setbe"] = new List<inst_def> { instrs["setbe_rm8"] };
				instr_choices["setnbe"] = new List<inst_def> { instrs["setnbe_rm8"] };
				instr_choices["sets"] = new List<inst_def> { instrs["sets_rm8"] };
				instr_choices["setns"] = new List<inst_def> { instrs["setns_rm8"] };
				instr_choices["setp"] = new List<inst_def> { instrs["setp_rm8"] };
				instr_choices["setnp"] = new List<inst_def> { instrs["setnp_rm8"] };
				instr_choices["setl"] = new List<inst_def> { instrs["setl_rm8"] };
				instr_choices["setnl"] = new List<inst_def> { instrs["setnl_rm8"] };
				instr_choices["setle"] = new List<inst_def> { instrs["setle_rm8"] };
				instr_choices["setnle"] = new List<inst_def> { instrs["setnle_rm8"] };
				instr_choices["cpuid"] = new List<inst_def> { instrs["cpuid"] };
				instr_choices["bt"] = new List<inst_def> { instrs["bt_rm163264"], instrs["bt_rm163264"] };
				instr_choices["shld"] = new List<inst_def> { instrs["shld_r163264_rm163264"], instrs["shld_r163264_rm163264"] };
				instr_choices["rsm"] = new List<inst_def> { instrs["rsm"] };
				instr_choices["bts"] = new List<inst_def> { instrs["bts_r163264_rm163264"], instrs["bts_imm8_rm163264"] };
				instr_choices["shrd"] = new List<inst_def> { instrs["shrd_r163264_rm163264"], instrs["shrd_r163264_rm163264"] };
				instr_choices["fxsave"] = new List<inst_def> { instrs["fxsave_m512"], instrs["fxsave_m512"] };
				instr_choices["fxrstor"] = new List<inst_def> { instrs["fxrstor_m512"], instrs["fxrstor_m512"] };
				instr_choices["ldmxcsr"] = new List<inst_def> { instrs["ldmxcsr_m32"] };
				instr_choices["stmxcsr"] = new List<inst_def> { instrs["stmxcsr_m32"] };
				instr_choices["xsave"] = new List<inst_def> { instrs["xsave_m"], instrs["xsave_m"] };
				instr_choices["lfence"] = new List<inst_def> { instrs["lfence"] };
				instr_choices["xrstor"] = new List<inst_def> { instrs["xrstor_m"], instrs["xrstor_m"] };
				instr_choices["mfence"] = new List<inst_def> { instrs["mfence"] };
				instr_choices["sfence"] = new List<inst_def> { instrs["sfence"] };
				instr_choices["clflush"] = new List<inst_def> { instrs["clflush_m8"] };
				instr_choices["cmpxchg"] = new List<inst_def> { instrs["cmpxchg_r8_rm8"], instrs["cmpxchg_r163264_rm163264"] };
				instr_choices["lss"] = new List<inst_def> { instrs["lss_m16163264"] };
				instr_choices["btr"] = new List<inst_def> { instrs["btr_r163264_rm163264"], instrs["btr_imm8_rm163264"] };
				instr_choices["lfs"] = new List<inst_def> { instrs["lfs_m16163264"] };
				instr_choices["lgs"] = new List<inst_def> { instrs["lgs_m16163264"] };
				instr_choices["movzx"] = new List<inst_def> { instrs["movzx_rm8_r163264"], instrs["movzx_rm16_r163264"] };
				instr_choices["popcnt"] = new List<inst_def> { instrs["popcnt_rm163264_r163264"] };
				instr_choices["ud"] = new List<inst_def> { instrs["ud_g"] };
				instr_choices["btc"] = new List<inst_def> { instrs["btc_imm8_rm163264"], instrs["btc_r163264_rm163264"] };
				instr_choices["bsf"] = new List<inst_def> { instrs["bsf_rm163264_r163264"] };
				instr_choices["bsr"] = new List<inst_def> { instrs["bsr_rm163264_r163264"] };
				instr_choices["movsx"] = new List<inst_def> { instrs["movsx_rm8_r163264"], instrs["movsx_rm16_r163264"] };
				instr_choices["xadd"] = new List<inst_def> { instrs["xadd_rm8"], instrs["xadd_rm163264"] };
				instr_choices["cmpps"] = new List<inst_def> { instrs["cmpps_xmmm128_xmm128"] };
				instr_choices["cmpss"] = new List<inst_def> { instrs["cmpss_xmmm32real_xmm32real"] };
				instr_choices["cmppd"] = new List<inst_def> { instrs["cmppd_xmmm128_xmm128"] };
				instr_choices["cmpsd"] = new List<inst_def> { instrs["cmpsd_xmmm64real_xmm64real"] };
				instr_choices["movnti"] = new List<inst_def> { instrs["movnti_r3264_m3264"] };
				instr_choices["pinsrw"] = new List<inst_def> { instrs["pinsrw_r3264_mm64"], instrs["pinsrw_r3264_xmm128"] };
				instr_choices["shufps"] = new List<inst_def> { instrs["shufps_xmmm128_xmm128"] };
				instr_choices["shufpd"] = new List<inst_def> { instrs["shufpd_xmmm128_xmm128"] };
				instr_choices["cmpxchg8b"] = new List<inst_def> { instrs["cmpxchg8b_m64"], instrs["cmpxchg8b_m64"] };
				instr_choices["vmptrld"] = new List<inst_def> { instrs["vmptrld_m64"] };
				instr_choices["vmclear"] = new List<inst_def> { instrs["vmclear_m64"] };
				instr_choices["vmxon"] = new List<inst_def> { instrs["vmxon_m64"] };
				instr_choices["vmptrst"] = new List<inst_def> { instrs["vmptrst_m64"] };
				instr_choices["bswap"] = new List<inst_def> { instrs["bswap_r163264"] };
				instr_choices["addsubpd"] = new List<inst_def> { instrs["addsubpd_xmmm128_xmm128"] };
				instr_choices["addsubps"] = new List<inst_def> { instrs["addsubps_xmmm128_xmm128"] };
				instr_choices["paddq"] = new List<inst_def> { instrs["paddq_mmm6464_mm64"], instrs["paddq_xmmm128_xmm128"] };
				instr_choices["pmullw"] = new List<inst_def> { instrs["pmullw_mmm6464_mm64"], instrs["pmullw_xmmm128_xmm128"] };
				instr_choices["movq2dq"] = new List<inst_def> { instrs["movq2dq_mm64_xmm128"] };
				instr_choices["movdq2q"] = new List<inst_def> { instrs["movdq2q_xmm64_mm64"] };
				instr_choices["pmovmskb"] = new List<inst_def> { instrs["pmovmskb_mm64_r3264"], instrs["pmovmskb_xmm128_r3264"] };
				instr_choices["psubusb"] = new List<inst_def> { instrs["psubusb_mmm6464_mm64"], instrs["psubusb_xmmm128_xmm128"] };
				instr_choices["psubusw"] = new List<inst_def> { instrs["psubusw_mmm6464_mm64"], instrs["psubusw_xmmm128_xmm128"] };
				instr_choices["pminub"] = new List<inst_def> { instrs["pminub_mmm6464_mm64"], instrs["pminub_xmmm128_xmm128"] };
				instr_choices["pand"] = new List<inst_def> { instrs["pand_mmm6432_mm64"], instrs["pand_xmmm128_xmm128"] };
				instr_choices["paddusb"] = new List<inst_def> { instrs["paddusb_mmm6464_mm64"], instrs["paddusb_xmmm128_xmm128"] };
				instr_choices["paddusw"] = new List<inst_def> { instrs["paddusw_mmm6464_mm64"], instrs["paddusw_xmmm128_xmm128"] };
				instr_choices["pmaxub"] = new List<inst_def> { instrs["pmaxub_mmm6464_mm64"], instrs["pmaxub_xmmm128_xmm128"] };
				instr_choices["pandn"] = new List<inst_def> { instrs["pandn_mmm6464_mm64"], instrs["pandn_xmmm128_xmm128"] };
				instr_choices["pavgb"] = new List<inst_def> { instrs["pavgb_mmm6464_mm64"], instrs["pavgb_xmmm128_xmm128"] };
				instr_choices["pavgw"] = new List<inst_def> { instrs["pavgw_mmm6464_mm64"], instrs["pavgw_xmmm128_xmm128"] };
				instr_choices["pmulhuw"] = new List<inst_def> { instrs["pmulhuw_mmm6464_mm64"], instrs["pmulhuw_xmmm128_xmm128"] };
				instr_choices["pmulhw"] = new List<inst_def> { instrs["pmulhw_mmm6464_mm64"], instrs["pmulhw_xmmm128_xmm128"] };
				instr_choices["cvtpd2dq"] = new List<inst_def> { instrs["cvtpd2dq_xmmm128_xmm128"] };
				instr_choices["cvttpd2dq"] = new List<inst_def> { instrs["cvttpd2dq_xmmm128_xmm128"] };
				instr_choices["cvtdq2pd"] = new List<inst_def> { instrs["cvtdq2pd_xmmm128_xmm128"] };
				instr_choices["movntq"] = new List<inst_def> { instrs["movntq_mm64_m64"] };
				instr_choices["movntdq"] = new List<inst_def> { instrs["movntdq_xmm128_m128"] };
				instr_choices["psubsb"] = new List<inst_def> { instrs["psubsb_mmm6464_mm64"], instrs["psubsb_xmmm128_xmm128"] };
				instr_choices["psubsw"] = new List<inst_def> { instrs["psubsw_mmm6464_mm64"], instrs["psubsw_xmmm128_xmm128"] };
				instr_choices["pminsw"] = new List<inst_def> { instrs["pminsw_mmm6464_mm64"], instrs["pminsw_xmmm128_xmm128"] };
				instr_choices["por"] = new List<inst_def> { instrs["por_mmm6464_mm64"], instrs["por_xmmm128_xmm128"] };
				instr_choices["paddsb"] = new List<inst_def> { instrs["paddsb_mmm6464_mm64"], instrs["paddsb_xmmm128_xmm128"] };
				instr_choices["paddsw"] = new List<inst_def> { instrs["paddsw_mmm6464_mm64"], instrs["paddsw_xmmm128_xmm128"] };
				instr_choices["pmaxsw"] = new List<inst_def> { instrs["pmaxsw_mmm6464_mm64"], instrs["pmaxsw_xmmm128_xmm128"] };
				instr_choices["pxor"] = new List<inst_def> { instrs["pxor_mmm6464_mm64"], instrs["pxor_xmmm128_xmm128"] };
				instr_choices["lddqu"] = new List<inst_def> { instrs["lddqu_m128_xmm128"] };
				instr_choices["pmuludq"] = new List<inst_def> { instrs["pmuludq_mmm6464_mm64"], instrs["pmuludq_xmmm128_xmm128"] };
				instr_choices["pmaddwd"] = new List<inst_def> { instrs["pmaddwd_mmm6432_mm64"], instrs["pmaddwd_xmmm128_xmm128"] };
				instr_choices["psadbw"] = new List<inst_def> { instrs["psadbw_mmm6464_mm64"], instrs["psadbw_xmmm128_xmm128"] };
				instr_choices["maskmovq"] = new List<inst_def> { instrs["maskmovq_mm64"] };
				instr_choices["maskmovdqu"] = new List<inst_def> { instrs["maskmovdqu_xmm128"] };
				instr_choices["psubb"] = new List<inst_def> { instrs["psubb_mmm6464_mm64"], instrs["psubb_xmmm128_xmm128"] };
				instr_choices["psubw"] = new List<inst_def> { instrs["psubw_mmm6464_mm64"], instrs["psubw_xmmm128_xmm128"] };
				instr_choices["psubd"] = new List<inst_def> { instrs["psubd_mmm6464_mm64"], instrs["psubd_xmmm128_xmm128"] };
				instr_choices["psubq"] = new List<inst_def> { instrs["psubq_mmm6464_mm64"], instrs["psubq_xmmm128_xmm128"] };
				instr_choices["paddb"] = new List<inst_def> { instrs["paddb_mmm6464_mm64"], instrs["paddb_xmmm128_xmm128"] };
				instr_choices["paddw"] = new List<inst_def> { instrs["paddw_mmm6464_mm64"], instrs["paddw_xmmm128_xmm128"] };
				instr_choices["paddd"] = new List<inst_def> { instrs["paddd_mmm6464_mm64"], instrs["paddd_xmmm128_xmm128"] };
			}
		}
	}
}

